import{_ as c}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as l,o as i,c as u,b as r,w as a,a as p,d as s,e as n}from"./app-xY0mnQCY.js";const k={},d=p(`<h2 id="_1-如何创建一个电话薄" tabindex="-1"><a class="header-anchor" href="#_1-如何创建一个电话薄" aria-hidden="true">#</a> 1. 如何创建一个电话薄</h2><p>我们现在有下面的联系人：</p><table><thead><tr><th>姓名</th><th>手机号</th></tr></thead><tbody><tr><td>李雷</td><td>123456</td></tr><tr><td>韩梅梅</td><td>132456</td></tr><tr><td>大卫</td><td>154389</td></tr><tr><td>Mr.Liu</td><td>131452</td></tr><tr><td>Bornforthis</td><td>180595</td></tr><tr><td>Alexa</td><td>131559</td></tr></tbody></table><p>如何用以往学过的知识构建一个具有用户输入查询功能的电话簿。</p><blockquote><p>变量、数字型、列表、元组、字符串。</p></blockquote><p>程序运行效果：</p><ul><li>测试一：</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>Enter your search name<span class="token punctuation">:</span> 李雷
The 李雷 phone number <span class="token keyword">is</span><span class="token punctuation">:</span> <span class="token number">123456</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>测试二：</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>Enter your search name<span class="token punctuation">:</span> Bornforthis
The Bornforthis phone number <span class="token keyword">is</span><span class="token punctuation">:</span> <span class="token number">180595</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,10),m=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[s("name "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token builtin"},"input"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Please enter your name: "'),n("span",{class:"token punctuation"},")"),s(`
lst_1 `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"'李雷'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'韩梅梅'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'大卫'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'Mr.Liu'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'Bornforthis'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'Alexa'"),n("span",{class:"token punctuation"},"]"),s(`
lst_2 `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"123456"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"132456"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"154389"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"131452"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"180595"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"131559"),n("span",{class:"token punctuation"},"]"),s(`
new_lst `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token builtin"},"list"),n("span",{class:"token punctuation"},"("),n("span",{class:"token builtin"},"zip"),n("span",{class:"token punctuation"},"("),s("lst_1"),n("span",{class:"token punctuation"},","),s(" lst_2"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
position_name `),n("span",{class:"token operator"},"="),s(" lst_1"),n("span",{class:"token punctuation"},"."),s("index"),n("span",{class:"token punctuation"},"("),s("name"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string-interpolation"},[n("span",{class:"token string"},'f"The '),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),s("name"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"}," phone number is: "),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),s("new_lst"),n("span",{class:"token punctuation"},"["),s("position_name"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},'"')]),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),b=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[s("name "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token builtin"},"input"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Please enter your name: "'),n("span",{class:"token punctuation"},")"),s(`
lst_1 `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"'李雷'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'韩梅梅'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'大卫'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'Mr.Liu'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'Bornforthis'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'Alexa'"),n("span",{class:"token punctuation"},"]"),s(`
lst_2 `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"123456"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"132456"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"154389"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"131452"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"180595"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"131559"),n("span",{class:"token punctuation"},"]"),s(`
position `),n("span",{class:"token operator"},"="),s(" lst_1"),n("span",{class:"token punctuation"},"."),s("index"),n("span",{class:"token punctuation"},"("),s("name"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string-interpolation"},[n("span",{class:"token string"},'f"The '),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),s("name"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"}," phone number is: "),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),s("lst_2"),n("span",{class:"token punctuation"},"["),s("position"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},'"')]),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),v=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[s("name "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token builtin"},"input"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Please enter your name: "'),n("span",{class:"token punctuation"},")"),s(`
lst_1 `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"'李雷'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"123456"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'韩梅梅'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"132456"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'大卫'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"154389"),n("span",{class:"token punctuation"},","),s("  "),n("span",{class:"token string"},"'Mr.Liu'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"131452"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'Bornforthis'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"180595"),n("span",{class:"token punctuation"},","),n("span",{class:"token string"},"'Alexa'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"131559"),n("span",{class:"token punctuation"},"]"),s(`
position `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token builtin"},"int"),n("span",{class:"token punctuation"},"("),s("lst_1"),n("span",{class:"token punctuation"},"."),s("index"),n("span",{class:"token punctuation"},"("),s("name"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string-interpolation"},[n("span",{class:"token string"},'f"The '),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),s("name"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"}," phone number is: "),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),s("lst_1"),n("span",{class:"token punctuation"},"["),s("position "),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},'"')]),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),g=p(`<p>由上面的问题应该要了解两个点：</p><ol><li>如何用已有的知识去完成未知的新任务，毕竟不可能包含全部各种需求所需要的数据类型类型；</li><li>字典存在意义，从上面题目完成后应该要 get 到。</li></ol><h2 id="_2-字典结构" tabindex="-1"><a class="header-anchor" href="#_2-字典结构" aria-hidden="true">#</a> 2. 字典结构</h2><ul><li>用 <strong><span style="color:orange;">花括号</span></strong> 表示字典</li><li>字典内每一项都有两个元素组成：<strong><span style="color:orange;">key 和 value</span></strong><ul><li><code>{key: value, key: value}</code></li></ul></li><li>各个项用 <strong><span style="color:orange;">逗号</span></strong> 隔开</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>phone_numbers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;李雷&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;1234&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;韩梅梅&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;3456&#39;</span><span class="token punctuation">}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>phone_numbers<span class="token punctuation">[</span><span class="token string">&#39;李雷&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment">#1234</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-字典结构-key-value" tabindex="-1"><a class="header-anchor" href="#_3-字典结构-key-value" aria-hidden="true">#</a> 3. 字典结构 key&amp;Value</h2><ul><li>key 和 value 是一一对应，同一个键只能有一个对应的值</li><li>键的类型是不可变的；</li><li>value 的类型是任意的；</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>names <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;李雷&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;numbers&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;1234&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;韩梅梅&#39;</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">:</span> <span class="token string">&#39;bool&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">:</span> <span class="token string">&#39;int&#39;</span><span class="token punctuation">}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>names<span class="token punctuation">)</span>
<span class="token comment">#{&#39;name&#39;: &#39;韩梅梅&#39;, &#39;numbers&#39;: &#39;1234&#39;, True: &#39;bool&#39;, 2: &#39;int&#39;}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>如果用key做列表则报错</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>names <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token string">&#39;李雷&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;numbers&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;1234&#39;</span><span class="token punctuation">}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>names<span class="token punctuation">)</span>
<span class="token comment">#---output---</span>
Traceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span><span class="token punctuation">:</span>
  File <span class="token string">&quot;/Users/wangruoyihan/PycharmProjects/pythonProject/python homework.py&quot;</span><span class="token punctuation">,</span> line <span class="token number">100</span><span class="token punctuation">,</span> <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">&gt;</span>
    names <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token string">&#39;李雷&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;numbers&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;1234&#39;</span><span class="token punctuation">}</span>
            <span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span>
TypeError<span class="token punctuation">:</span> unhashable <span class="token builtin">type</span><span class="token punctuation">:</span> <span class="token string">&#39;list&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-用字典函数创建字典" tabindex="-1"><a class="header-anchor" href="#_4-用字典函数创建字典" aria-hidden="true">#</a> 4. 用字典函数创建字典</h2><ul><li>方法一：根据其他序列新建字典</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>message <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">&#39;lilei&#39;</span> <span class="token punctuation">,</span> <span class="token number">98</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;hanmeimei&#39;</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
list_to_dict <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>list_to_dict<span class="token punctuation">)</span>

<span class="token comment">#output</span>
<span class="token punctuation">{</span><span class="token string">&#39;lilei&#39;</span><span class="token punctuation">:</span> <span class="token number">98</span><span class="token punctuation">,</span> <span class="token string">&#39;hanmeimei&#39;</span><span class="token punctuation">:</span> <span class="token number">99</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>方法二：根据关键字参数新建字典</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>d <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span>lilei <span class="token operator">=</span> <span class="token number">98</span><span class="token punctuation">,</span> hanmeimei <span class="token operator">=</span> <span class="token number">99</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span>
<span class="token comment">#output</span>
<span class="token punctuation">{</span><span class="token string">&#39;lilei&#39;</span><span class="token punctuation">:</span> <span class="token number">98</span><span class="token punctuation">,</span> <span class="token string">&#39;hanmeimei&#39;</span><span class="token punctuation">:</span> <span class="token number">99</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">上面两种创建字典的方法，有什么优缺点？</p><p>上面方法一的方法，可以更好的适配字典的各种数据类型情况。why？——因为结构是列表里面放元组，而元组的 0 号位放 key，1 号位放 value。所以，只要是不可变的数据类型都可以放在 0 号位。</p><p>反之对比上面方法二：第一个位置必须是“变量”，不能是其它数据类型。举个例子：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>d <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span>lilei<span class="token operator">=</span><span class="token number">98</span><span class="token punctuation">,</span> hanmeimei<span class="token operator">=</span><span class="token number">99</span><span class="token punctuation">)</span>  <span class="token comment"># 看起来正常</span>
d <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token string">&#39;lilei&#39;</span><span class="token operator">=</span><span class="token number">98</span><span class="token punctuation">,</span> <span class="token string">&#39;hanmeimei&#39;</span><span class="token operator">=</span><span class="token number">99</span><span class="token punctuation">)</span>  <span class="token comment"># 看起来怎么样？</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>上面第二行代码，看起来就很奇怪了，一共有两个值一个值是 <code>&#39;lilei&#39;</code> 另一个值 <code>98</code> 两个都是值，可以用 98 赋值给另一个值吗？——显然是不行的。我们的赋值是需要把一个值赋值给一个变量「有空间」。</p><p>所以，第二种方法虽然可以实现创建字典，但是对于字典 key 的各种情况并不能完全支持。</p></div><h2 id="_5-访问字典数据" tabindex="-1"><a class="header-anchor" href="#_5-访问字典数据" aria-hidden="true">#</a> 5. 访问字典数据</h2><h3 id="_5-1-中括号访问" tabindex="-1"><a class="header-anchor" href="#_5-1-中括号访问" aria-hidden="true">#</a> 5.1 中括号访问</h3><ul><li>利用中括号加要查询的key</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>grade <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;李雷&#39;</span><span class="token punctuation">:</span> <span class="token number">98</span><span class="token punctuation">,</span> <span class="token string">&#39;韩梅梅&#39;</span><span class="token punctuation">:</span> <span class="token number">99</span><span class="token punctuation">}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>grade<span class="token punctuation">[</span><span class="token string">&#39;李雷&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">#98</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,20);function h(y,_){const o=l("CodeTabs");return i(),u("div",null,[d,r(o,{id:"95",data:[{id:"Code1"},{id:"Code2"},{id:"Code3"}]},{title0:a(({value:t,isActive:e})=>[s("Code1")]),title1:a(({value:t,isActive:e})=>[s("Code2")]),title2:a(({value:t,isActive:e})=>[s("Code3")]),tab0:a(({value:t,isActive:e})=>[m]),tab1:a(({value:t,isActive:e})=>[b]),tab2:a(({value:t,isActive:e})=>[v]),_:1}),g])}const w=c(k,[["render",h],["__file","07-dictionary.html.vue"]]);export{w as default};
