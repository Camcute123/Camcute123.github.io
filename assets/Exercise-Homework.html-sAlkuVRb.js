import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as e,c as a,a as s}from"./app-S0bybcBd.js";const p={},o=s(`<hr><h2 id="chapter1-after-class-test" tabindex="-1"><a class="header-anchor" href="#chapter1-after-class-test" aria-hidden="true">#</a> Chapter1 after class test</h2><ol><li><p>以下哪个变量可以做 Python 的变量： <code>C</code></p><p>A. 01a B. class C. a_int D. b-int</p></li><li><p>以下哪个选项不是 Python 的基本数据类型关键字 <code>C</code></p><p>A. int B.bool C. string D. dict</p></li><li><p>此题无需在线作答，请在纸上作答后查看答案解析</p><p>语句 <code>x, y, z = 1, 2, 3</code> 执行后，变量 y 的值为. <code>2</code> 。</p></li><li><p>查看变量类型的 Python 内置函数是. <code>type()</code></p></li><li><p>此题无需在线作答，请在纸上作答后查看答案解析</p><p>请写出该代码的输出结果. <code>XYZ</code>。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>a = &#39;ABC&#39;
b = a
a = &#39;XYZ&#39;
print(b)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="chapter2-after-class-test" tabindex="-1"><a class="header-anchor" href="#chapter2-after-class-test" aria-hidden="true">#</a> Chapter2 after class test</h2><ol><li>数字型和字符串类型的变量完全可以互相转换。✅</li></ol><p>A. 正确</p><p>B. 错误</p><ol start="2"><li>加法运算符可以用来连接字符串并生成新字符串。✅</li></ol><p>A. 正确</p><p>B. 错误</p><ol start="3"><li>不管输入什么，Python 3.x 中 <code>input()</code> 函数的返回值总是字符串。✅</li></ol><p>A. 正确</p><p>B. 错误</p><ol start="4"><li>Python 字符串方法 <code>replace()</code> 对字符串进行原地修改。✅</li></ol><p>A. 正确</p><p>B. 错误</p><ol start="5"><li>此题无需在线作答，请在纸上作答后查看答案解析</li></ol><p><code>7//3</code> 的值为 <code>2</code> .<code>7%3</code> 的值为 <code>1</code>。</p><ol start="6"><li>此题无需在线作答，请在纸上作答后查看答案解析</li></ol><p>y 变量初始赋值为 10，有代码为：<code>y *= 2</code>，则运算过后 y 的值为 <code>20</code>。</p><ol start="7"><li>此题无需在线作答，请在纸上作答后查看答案解析</li></ol><p>可以使用 <code>str()</code> 函数将数字型的变量转换成字符串。</p><ol start="8"><li>下列哪个表达式在 Python 中是非法的？ <code>B</code></li></ol><p>A. x = y = z = 1</p><p>B. x = (y = z + 1)</p><p>C. x, y = y, x</p><p>D. x += y</p><ol start="9"><li>字符串是 Python 的_________序列。 <code>A</code></li></ol><p>A. 有序</p><p>B. 无序</p><ol start="10"><li><p>当在字符串前加上小写字母 <code>r</code> 或大写字母 <code>R</code> 表示原始字符串，不对其中的任何字符进行转义。</p></li><li><p>已知字符串 <code>x = &#39;hello world&#39;</code> ，那么执行语句 <code>x.replace(&#39;hello&#39;, &#39;hi&#39;)</code> 之后，x 的值为____________。</p></li><li><p>此题无需在线作答，请在纸上作答后查看答案解析</p></li></ol><p>设 <code>s=&#39;abcdefg&#39;</code>，则：</p><ul><li><code>s[3]</code> 的值为. d</li><li><code>s[3:5]</code> 的值为. def</li><li><code>s[:5]</code> 的值为. abcdef</li><li><code>s[3:]</code> 的值为. defg</li><li><code>s[::2]</code> 的值为. aceg</li><li><code>s[::-1]</code> 的值为. gfedcba</li><li><code>s[-2:-5]</code> 的值为. 🈳️</li></ul><ol start="13"><li><p>（知识拓展）有变量 <code>name = &#39; Alex &#39;</code>，请按照要求实现每个功能：</p></li><li><p>移除 name 变量对应的值两边的空格，并输出移除后的内容；</p></li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>name<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol><li>判断 name 变量对应的值是否以 <code>&quot;al&quot;</code> 开头和以 <code>&quot;X&quot;</code> 结尾，并输出结果；</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>name <span class="token operator">=</span> <span class="token string">&quot;  Alex  &quot;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">&quot;al&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">&quot;X&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">#---output---</span>
<span class="token boolean">False</span>
<span class="token boolean">False</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>将 name 变量对应的值中的 <code>l</code> 替换为 <code>p</code>，并输出结果；</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&#39;l&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;p&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol><li>将 name 变量对应的值根据 <code>l</code> 分割，并输出结果；</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span>name<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;l&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">#[&#39;  A&#39;, &#39;ex  &#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>将 name 变量对应的值分别变大写和小写，并输出结果。</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#upper</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">#  ALEX</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">#  alex </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="chapter3-after-class-test" tabindex="-1"><a class="header-anchor" href="#chapter3-after-class-test" aria-hidden="true">#</a> Chapter3 after class test</h2><ol><li><p>列表、元组、字符串是 Python 的_______序列。 <code>A</code></p><p>A. 有序</p><p>B. 无序</p></li><li><p>________关键字既可以删除列表中的一个元素，也可以删除整个列表。 <code>del()</code></p></li><li><p>已知列表 <code>x = [1, 2, 3]</code> ，那么执行语句 <code>x.pop(0)</code> 之后，x 的值为_________。 <code>[2, 3]</code></p></li><li><p>已知列表 <code>x = [1, 2, 3]</code> ，那么执行语句 <code>x.insert(1, 4)</code> 只有，x 的值为___________。 <code>[1, 4, 2, 3]</code></p></li><li><p>任意长度的 Python 列表、元组和字符串中最后一个元素的下标为________。 <code>-1</code></p></li><li><p>列表对象的 <code>append()</code> 方法属于原地操作，用于在列表尾部追加一个元素。 ✅</p><p>A. √</p><p>B. X</p></li><li><p>Python 列表中所有元素必须为相同类型的数据。 ❌</p><p>A. √</p><p>B. X</p></li><li><p>已知 x 是个列表对象，那么执行语句 <code>y = x</code> 之后，对y所做的任何操作都会同样作用到 x 上。 ✅</p><p>A. √</p><p>B. X</p></li><li><p>已知 x 是个列表对象，那么执行语句 <code>y = x[:]</code> 之后，对 y 所做的任何操作都会同样作用到x上。 ❌</p><p>A. √</p><p>B. X</p></li><li><p>列表、元组、字符串支持双向索引。 ✅</p><p>A. √</p><p>B. X</p></li></ol><h2 id="chapter4-after-class-test" tabindex="-1"><a class="header-anchor" href="#chapter4-after-class-test" aria-hidden="true">#</a> Chapter4 after class test</h2><hr><ol><li><p>Python 支持使用字典的“键”作为下标来访问字典中的值。 ✅</p><p>A. √</p><p>B. X</p></li><li><p>列表可以作为字典的“键”。 键不可变 ❌</p><p>A. √</p><p>B. X</p></li><li><p>Python 支持字典里嵌套列表或嵌套字典。 ✅</p><p>A. √</p><p>B. X</p></li><li><p>Python字典中的“键”不允许重复。 ✅</p><p>A. √</p><p>B. X</p></li><li><p>Python字典中的“值”不允许重复。 ❌</p><p>A. √</p><p>B. X</p></li><li><p>Python 字典和集合属于无序序列。 ✅</p><p>A. √</p><p>B. X</p></li><li><p>Python 内置函数____len()_____可以返回列表、元组、字典、集合、字符串中的元素个数。</p></li><li><p>字典中多个元素之间使用____________ <code>,</code> 分隔开，每个元素的“键”与“值”之间使用________分隔开。<code>:</code></p></li><li><p>获得集合的并集应使用___|___运算符；获得集合的交集应使用___&amp;___运算符；获得集合的差集应使用___-___运算符。</p></li><li><p>集合 a 被定义为：<code>a = {1,2,3,2,5,6,2,1}</code> ；则代码 <code>len(a)</code> 的值为_____8____。</p></li><li><p>（拓展）字典对象的____get ( )_______方法可以获取指定 “键” 对应的“值”，并且可以在指定 “键” 不存在的时候返回指定值，如果不指定则返回 None。</p></li></ol>`,48),l=[o];function t(c,i){return e(),a("div",null,l)}const u=n(p,[["render",t],["__file","Exercise-Homework.html.vue"]]);export{u as default};
