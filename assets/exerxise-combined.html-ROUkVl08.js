import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,a as t}from"./app-DSnxh8tb.js";const e={},p=t(`<h2 id="question-01-find-the-missing-number" tabindex="-1"><a class="header-anchor" href="#question-01-find-the-missing-number" aria-hidden="true">#</a> Question 01: Find the Missing Number</h2><p>Acquire user input, where the user inputs a specific list. This list consists of consecutive numerical elements. However, one number is missing. Please write a program to find the missing number without using any built-in functions.</p><p>Sample Test 1:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>Enter the <span class="token builtin">list</span> of numbers<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span>
The missing number <span class="token keyword">is</span> <span class="token number">5.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Sample Test 2:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>Enter the <span class="token builtin">list</span> of numbers<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span>
The missing number <span class="token keyword">is</span> <span class="token number">3.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>user_number <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;Please enter a list of continuous numbers: &quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
lst_number <span class="token operator">=</span> user_number<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span>
lst_number <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span> <span class="token keyword">for</span> num <span class="token keyword">in</span> lst_number<span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>lst_number<span class="token punctuation">)</span>
total_number <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> n <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lst_number<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    total_number<span class="token punctuation">.</span>append<span class="token punctuation">(</span>n<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>total_number<span class="token punctuation">)</span>
missing_number <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span>total_number<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token builtin">set</span><span class="token punctuation">(</span>lst_number<span class="token punctuation">)</span>
<span class="token keyword">for</span> missing_number <span class="token keyword">in</span> missing_number<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;the number </span><span class="token interpolation"><span class="token punctuation">{</span>missing_number<span class="token punctuation">}</span></span><span class="token string"> is missing.&quot;</span></span><span class="token punctuation">)</span>
   
 <span class="token comment">#---output---</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>
the number <span class="token number">3</span> <span class="token keyword">is</span> missing<span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="question-03-shallow-copy-verification" tabindex="-1"><a class="header-anchor" href="#question-03-shallow-copy-verification" aria-hidden="true">#</a> Question 03: Shallow Copy Verification</h2><p>Demonstrate shallow copying of a list and show how it differs from a deep copy.</p><p>浅拷贝：复制一个列表（但不会创建一个新的，也就是说id是和所复制的列表完全相同的）</p><p>所存在的问题时，当一个列表中嵌套了另一个列表，就无法实现复制。</p><h2 id="question-04-list-to-string-conversion" tabindex="-1"><a class="header-anchor" href="#question-04-list-to-string-conversion" aria-hidden="true">#</a> <a href="#question-04-list-to-string-conversion">#</a> Question 04: List to String Conversion</h2><p>Obtain a user-input list and a specific delimiter, and concatenate the items in the user-input list into a string using the specified delimiter.</p><p>Sample Test 1:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>Please enter a <span class="token builtin">list</span> of elements<span class="token punctuation">,</span> separated by commas<span class="token punctuation">:</span> apple<span class="token punctuation">,</span> banana<span class="token punctuation">,</span> orange
Please enter the delimiter you wish to use<span class="token punctuation">:</span> <span class="token punctuation">;</span>
apple<span class="token punctuation">;</span> banana<span class="token punctuation">;</span> orange
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Sample Test 2:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>Please enter a <span class="token builtin">list</span> of elements<span class="token punctuation">,</span> separated by commas<span class="token punctuation">:</span> dog<span class="token punctuation">,</span> cat<span class="token punctuation">,</span> mouse
Please enter the delimiter you wish to use<span class="token punctuation">:</span>  <span class="token operator">-</span> 
dog <span class="token operator">-</span>  cat <span class="token operator">-</span>  mouse
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Sample Test 3:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>Please enter a <span class="token builtin">list</span> of elements<span class="token punctuation">,</span> separated by commas<span class="token punctuation">:</span> Monday<span class="token punctuation">,</span> Tuesday<span class="token punctuation">,</span> Wednesday<span class="token punctuation">,</span> Thursday<span class="token punctuation">,</span> Friday
Please enter the delimiter you wish to use<span class="token punctuation">:</span> <span class="token punctuation">,</span> 
Monday<span class="token punctuation">,</span>  Tuesday<span class="token punctuation">,</span>  Wednesday<span class="token punctuation">,</span>  Thursday<span class="token punctuation">,</span>  Friday
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Sample Test 4:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>Please enter a <span class="token builtin">list</span> of elements<span class="token punctuation">,</span> separated by commas<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span>
Please enter the delimiter you wish to use<span class="token punctuation">:</span>  <span class="token operator">*</span> 
<span class="token number">1</span> <span class="token operator">*</span>  <span class="token number">2</span> <span class="token operator">*</span>  <span class="token number">3</span> <span class="token operator">*</span>  <span class="token number">4</span> <span class="token operator">*</span>  <span class="token number">5</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code></code></pre><div class="line-numbers" aria-hidden="true"></div></div><h2 id="question-05-list-symmetry-check" tabindex="-1"><a class="header-anchor" href="#question-05-list-symmetry-check" aria-hidden="true">#</a> Question 05: List Symmetry Check</h2><p>Check if a list is symmetric (the same forwards and backwards).</p><p>Sample Test 1:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>Enter a <span class="token builtin">list</span> of items separated by commas<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span>
Is the entered <span class="token builtin">list</span> symmetric<span class="token punctuation">:</span> <span class="token boolean">False</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Sample Test 2:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>Enter a <span class="token builtin">list</span> of items separated by commas<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span>
Is the entered <span class="token builtin">list</span> symmetric<span class="token punctuation">:</span> <span class="token boolean">True</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>user_message <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;Please enter a list of element, separated by commas: &quot;</span><span class="token punctuation">)</span>
lst_number <span class="token operator">=</span> user_message<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>lst_number<span class="token punctuation">)</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>lst_number<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lst_number<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lst_number<span class="token punctuation">[</span><span class="token builtin">len</span><span class="token punctuation">(</span>lst_number<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token operator">-</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;True&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;False&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">break</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="question-06-list-element-swapping" tabindex="-1"><a class="header-anchor" href="#question-06-list-element-swapping" aria-hidden="true">#</a> Question 06: List Element Swapping</h2><p>Write a program to swap two elements in a list.</p><p>Receive user input, where the user inputs a series of numbers. The last two numbers are the indices to be swapped.</p><p>Sample Test 1:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>Enter <span class="token builtin">list</span> elements followed by two positions to swap<span class="token punctuation">,</span> <span class="token builtin">all</span> separated by space<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span>
List after swapping elements<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;5&#39;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Sample Test 2:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>Enter <span class="token builtin">list</span> elements followed by two positions to swap<span class="token punctuation">,</span> <span class="token builtin">all</span> separated by space<span class="token punctuation">:</span> a<span class="token punctuation">,</span>b<span class="token punctuation">,</span> c<span class="token punctuation">,</span> d<span class="token punctuation">,</span> e <span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span>
List after swapping elements<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;e&#39;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><hr><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>user_number <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;Please enter a list of elements followed by two positions to swap: &quot;</span><span class="token punctuation">)</span>
lst1 <span class="token operator">=</span> user_number<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>lst1<span class="token punctuation">)</span>
position_1 <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lst1<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
position_2 <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lst1<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
lst1<span class="token punctuation">[</span>position_1<span class="token punctuation">]</span><span class="token punctuation">,</span>lst1<span class="token punctuation">[</span>position_2<span class="token punctuation">]</span> <span class="token operator">=</span> lst1<span class="token punctuation">[</span>position_2<span class="token punctuation">]</span><span class="token punctuation">,</span>lst1<span class="token punctuation">[</span>position_1<span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>lst1<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,39),o=[p];function i(c,l){return s(),a("div",null,o)}const k=n(e,[["render",i],["__file","exerxise-combined.html.vue"]]);export{k as default};
