const nt="ENTRIES",V="KEYS",T="VALUES",F="";class D{set;_type;_path;constructor(t,s){const n=t._tree,u=Array.from(n.keys());this.set=t,this._type=s,this._path=u.length>0?[{node:n,keys:u}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===F)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==F).join("")}value(){return E(this._path).node.get(F)}result(){switch(this._type){case T:return this.value();case V:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],ut=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const u=t.length+1,o=u+s,i=new Uint8Array(o*u).fill(s+1);for(let r=0;r<u;++r)i[r]=r;for(let r=1;r<o;++r)i[r*u]=r;return R(e,t,s,n,i,1,u,""),n},R=(e,t,s,n,u,o,i,r)=>{const d=o*i;t:for(const l of e.keys())if(l===F){const a=u[d-1];a<=s&&n.set(r,[e.get(l),a])}else{let a=o;for(let h=0;h<l.length;++h,++a){const m=l[h],p=i*a,f=p-i;let c=u[p];const g=Math.max(0,a-s-1),_=Math.min(i-1,a+s);for(let y=g;y<_;++y){const b=m!==t[y],z=u[f+y]+ +b,A=u[f+y+1]+1,w=u[p+y]+1,L=u[p+y+1]=Math.min(z,A,w);L<c&&(c=L)}if(c>s)continue t}R(e.get(l),t,s,n,u,a,i,r+l)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[u,o]=M(n);for(const i of u.keys())if(i!==F&&i.startsWith(o)){const r=new Map;return r.set(i.slice(o.length),u.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ot(this._tree,t)}entries(){return new D(this,nt)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return ut(this._tree,t,s)}get(t){const s=I(this._tree,t);return s!==void 0?s.get(F):void 0}has(t){const s=I(this._tree,t);return s!==void 0&&s.has(F)}keys(){return new D(this,V)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,O(this._tree,t).set(F,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=O(this._tree,t);return n.set(F,s(n.get(F))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=O(this._tree,t);let u=n.get(F);return u===void 0&&n.set(F,u=s()),u}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,u]of t)s.set(n,u);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==F&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},I=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==F&&t.startsWith(s))return I(e.get(s),t.slice(s.length))},O=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const o of e.keys())if(o!==F&&t[n]===o[0]){const i=Math.min(s-n,o.length);let r=1;for(;r<i&&t[n+r]===o[r];)++r;const d=e.get(o);if(r===o.length)e=d;else{const l=new Map;l.set(o.slice(r),d),e.set(t.slice(n,n+r),l),e.delete(o),e=l}n+=r;continue t}const u=new Map;return e.set(t.slice(n),u),u}return e},ot=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(F),s.size===0)W(n);else if(s.size===1){const[u,o]=s.entries().next().value;q(n,u,o)}}},W=e=>{if(e.length===0)return;const[t,s]=M(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,u]=t.entries().next().value;n!==F&&q(e.slice(0,-1),n,u)}},q=(e,t,s)=>{if(e.length===0)return;const[n,u]=M(e);n.set(u+t,s),n.delete(u)},M=e=>e[e.length-1],it=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},rt=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,S="or",$="and",ct="and_not",lt=(e,t)=>{e.includes(t)||e.push(t)},P=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},N=({score:e},{score:t})=>t-e,ht=()=>new Map,k=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,dt={[S]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:u,terms:o,match:i}=t.get(s);n.score=n.score+u,n.match=Object.assign(n.match,i),P(n.terms,o)}}return e},[$]:(e,t)=>{const s=new Map;for(const n of t.keys()){const u=e.get(n);if(u==null)continue;const{score:o,terms:i,match:r}=t.get(n);P(u.terms,i),s.set(n,{score:u.score+o,terms:u.terms,match:Object.assign(u.match,r)})}return s},[ct]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},at=(e,t,s,n,u,o)=>{const{k:i,b:r,d}=o;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/u)))},ft=e=>(t,s,n)=>{const u=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,o=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:u,prefix:o}},H=(e,t,s,n)=>{for(const u of Object.keys(e._fieldIds))if(e._fieldIds[u]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${u}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},gt=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const u=e._index.fetch(n,ht),o=u.get(t);o==null||o.get(s)==null?H(e,s,t,n):o.get(s)<=1?o.size<=1?u.delete(t):o.delete(s):o.set(s,o.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},mt={k:1.2,b:.7,d:.5},pt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(rt),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:S,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:mt},Ft={combineWith:$,prefix:(e,t,s)=>t===s.length-1},_t={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},yt={..._t,...U},Y=(e,t=S)=>{if(e.length===0)return new Map;const s=t.toLowerCase();return e.reduce(dt[s])||new Map},B=(e,t,s,n,u,o,i,r,d=new Map)=>{if(u==null)return d;for(const l of Object.keys(o)){const a=o[l],h=e._fieldIds[l],m=u.get(h);if(m==null)continue;let p=m.size;const f=e._avgFieldLength[h];for(const c of m.keys()){if(!e._documentIds.has(c)){gt(e,h,c,s),p-=1;continue}const g=i?i(e._documentIds.get(c),s,e._storedFields.get(c)):1;if(!g)continue;const _=m.get(c),y=e._fieldLength.get(c)[h],b=at(_,p,e._documentCount,y,f,r),z=n*a*g*b,A=d.get(c);if(A){A.score+=z,lt(A.terms,t);const w=G(A.match,s);w?w.push(l):A.match[s]=[l]}else d.set(c,{score:z,terms:[t],match:{[s]:[l]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},u=(n.fields||e._options.fields).reduce((c,g)=>({...c,[g]:G(n.boost,g)||1}),{}),{boostDocument:o,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:l,prefix:a}={...J.weights,...i},h=e._index.get(t.term),m=B(e,t.term,t.term,1,h,u,o,d);let p,f;if(t.prefix&&(p=e._index.atPrefix(t.term)),t.fuzzy){const c=t.fuzzy===!0?.2:t.fuzzy,g=c<1?Math.min(r,Math.round(t.term.length*c)):c;g&&(f=e._index.fuzzyGet(t.term,g))}if(p)for(const[c,g]of p){const _=c.length-t.term.length;if(!_)continue;f?.delete(c);const y=a*c.length/(c.length+.3*_);B(e,t.term,c,y,g,u,o,d,m)}if(f)for(const c of f.keys()){const[g,_]=f.get(c);if(!_)continue;const y=l*c.length/(c.length+_);B(e,t.term,c,y,g,u,o,d,m)}return m},X=(e,t,s={})=>{if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(m=>X(e,m,a));return Y(h,a.combineWith)}const{tokenize:n,processTerm:u,searchOptions:o}=e._options,i={tokenize:n,processTerm:u,...o,...s},{tokenize:r,processTerm:d}=i,l=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(ft(i)).map(a=>At(e,a,i));return Y(l,i.combineWith)},K=(e,t,s={})=>{const n=X(e,t,s),u=[];for(const[o,{score:i,terms:r,match:d}]of n){const l=r.length,a={id:e._documentIds.get(o),score:i*l,terms:Object.keys(d),match:d};Object.assign(a,e._storedFields.get(o)),(s.filter==null||s.filter(a))&&u.push(a)}return u.sort(N),u},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:o,terms:i}of K(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=o,d.count+=1):n.set(r,{score:o,terms:i,count:1})}const u=[];for(const[o,{score:i,terms:r,count:d}]of n)u.push({suggestion:o,terms:r,score:i/d});return u.sort(N),u};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?yt:t.autoVacuum;this._options={...pt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...Ft,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const u={};for(const[o,i]of n)u[o]=Object.fromEntries(i);t.push([s,u])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:u,fieldLength:o,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:l},a)=>{if(l!==1&&l!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=k(n),h._idToShortId=new Map,h._fieldIds=u,h._fieldLength=k(o),h._avgFieldLength=i,h._storedFields=k(r),h._dirtCount=d||0,h._index=new C;for(const[m,p]of h._documentIds)h._idToShortId.set(p,m);for(const[m,p]of e){const f=new Map;for(const c of Object.keys(p)){let g=p[c];l===1&&(g=g.ds),f.set(parseInt(c,10),k(g))}h._index.set(m,f)}return h},Q=Object.entries,wt=Object.fromEntries,j=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),u=[];let o=0,i=0;const r=(l,a=!1)=>{let h="";i===0?h=l.length>20?`… ${l.slice(-20)}`:l:a?h=l.length+i>100?`${l.slice(0,100-i)}… `:l:h=l.length>20?`${l.slice(0,20)} … ${l.slice(-20)}`:l,h&&u.push(h),i+=h.length,a||(u.push(["mark",t]),i+=t.length,i>=100&&u.push(" …"))};let d=s.indexOf(n,o);if(d===-1)return null;for(;d>=0;){const l=d+n.length;if(r(e.slice(o,d)),o=l,i>100)break;d=s.indexOf(n,o)}return i<100&&r(e.slice(o),!0),u},Z=/[\u4e00-\u9fa5]/g,tt=(e={})=>({fuzzy:.2,prefix:!0,processTerm:t=>{const s=t.match(Z)||[],n=t.replace(Z,"").toLowerCase();return n?[n,...s]:[...s]},...e}),xt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),kt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),et=(e,t,s={})=>{const n={};return K(t,e,tt({boost:{h:2,t:1,c:4},...s})).forEach(u=>{const{id:o,terms:i,score:r}=u,d=o.includes("@"),l=o.includes("#"),[a,h]=o.split(/[#@]/),m=i.sort((f,c)=>f.length-c.length).filter((f,c)=>i.slice(c+1).every(g=>!g.includes(f))),{contents:p}=n[a]??={title:"",contents:[]};if(d)p.push([{type:"customField",key:a,index:h,display:m.map(f=>u.c.map(c=>j(c,f))).flat().filter(f=>f!==null)},r]);else{const f=m.map(c=>j(u.h,c)).filter(c=>c!==null);if(f.length&&p.push([{type:l?"heading":"title",key:a,...l&&{anchor:h},display:f},r]),"t"in u)for(const c of u.t){const g=m.map(_=>j(c,_)).filter(_=>_!==null);g.length&&p.push([{type:"text",key:a,...l&&{anchor:h},display:g},r])}}}),Q(n).sort(([,u],[,o])=>"max"==="total"?xt(u,o):kt(u,o)).map(([u,{title:o,contents:i}])=>{if(!o){const r=it(t,u);r&&(o=r.h)}return{title:o,contents:i.map(([r])=>r)}})},st=(e,t,s={})=>Ct(t,e,tt(s)).map(({suggestion:n})=>n),v=wt(Q(JSON.parse("{\"/\":{\"documentCount\":13,\"nextId\":13,\"documentIds\":{\"0\":\"v-184f4da6\",\"1\":\"v-184f4da6@0\",\"2\":\"v-184f4da6@1\",\"3\":\"v-4dbe3698\",\"4\":\"v-4dbe3698#_1-headline\",\"5\":\"v-4dbe3698#headline2\",\"6\":\"v-4dbe3698#headline-3\",\"7\":\"v-4dbe3698#headline6\",\"8\":\"v-4dbe3698@0\",\"9\":\"v-4dbe3698@1\",\"10\":\"v-e52c881c\",\"11\":\"v-ae57d96a\",\"12\":\"v-54d7ff21\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[2,92],\"1\":[null,null,2],\"2\":[null,null,1],\"3\":[2,12],\"4\":[2],\"5\":[1],\"6\":[2,1],\"7\":[1],\"8\":[null,null,2],\"9\":[null,null,2],\"10\":[1],\"11\":[2],\"12\":[1]},\"averageFieldLength\":[1.6538461538461537,61.857142857142854,1.2],\"storedFields\":{\"0\":{\"h\":\"About me\",\"t\":[\"My name is Ruoyihan Wang (Cindy).\",\"Currently, I am a first-year student in the university of Cambridge, studying engineering.\",\"In my spare time, I enjoy photographing, reading novels, K-pop dancing and travelling ...\",\"I did some really interesting projects this term and I'd like to share some of them：\",\"1.Lego Mindstorm\",\"Created the 'gearbox' project by using different sensors to figure out the power of different gears in a team of three.\",\"Measuring the turning speed of different gear box and utilizing Python for controlling the mating of different gears.\",\"2.Integrated Electrical Project\",\"Applied signal theory in building modulation, tuning, and filter circuits.\",\"Acquired hands-on experience using LTSpice, PicoScope, multimeters, and microprocessors.\"]},\"1\":{\"c\":[\"Self-introduction\"]},\"2\":{\"c\":[\"Author\"]},\"3\":{\"h\":\"Article editing\",\"t\":[\"Here are some tips on how to write articles in Typora 👀\"]},\"4\":{\"h\":\"1.Headline\"},\"5\":{\"h\":\"Headline2\"},\"6\":{\"h\":\"Headline 3\",\"t\":[\"…….\"]},\"7\":{\"h\":\"Headline6\"},\"8\":{\"c\":[\"article editing\"]},\"9\":{\"c\":[\"reminder\",\"tips\"]},\"10\":{\"h\":\"Article\"},\"11\":{\"h\":\"Python Notebook\"},\"12\":{\"h\":\"Article\"}},\"dirtCount\":0,\"index\":[[\"3\",{\"0\":{\"6\":1}}],[\"👀\",{\"1\":{\"3\":1}}],[\"write\",{\"1\":{\"3\":1}}],[\"wang\",{\"1\":{\"0\":1}}],[\"headline6\",{\"0\":{\"7\":1}}],[\"headline2\",{\"0\":{\"5\":1}}],[\"headline\",{\"0\":{\"4\":1,\"6\":1}}],[\"here\",{\"1\":{\"3\":1}}],[\"how\",{\"1\":{\"3\":1}}],[\"hands\",{\"1\":{\"0\":1}}],[\"editing\",{\"0\":{\"3\":1},\"2\":{\"8\":1}}],[\"experience\",{\"1\":{\"0\":1}}],[\"electrical\",{\"1\":{\"0\":1}}],[\"enjoy\",{\"1\":{\"0\":1}}],[\"engineering\",{\"1\":{\"0\":1}}],[\"2\",{\"1\":{\"0\":1}}],[\"for\",{\"1\":{\"0\":1}}],[\"filter\",{\"1\":{\"0\":1}}],[\"figure\",{\"1\":{\"0\":1}}],[\"first\",{\"1\":{\"0\":1}}],[\"building\",{\"1\":{\"0\":1}}],[\"box\",{\"1\":{\"0\":1}}],[\"by\",{\"1\":{\"0\":1}}],[\"gear\",{\"1\":{\"0\":1}}],[\"gears\",{\"1\":{\"0\":2}}],[\"gearbox\",{\"1\":{\"0\":1}}],[\"on\",{\"1\":{\"0\":1,\"3\":1}}],[\"out\",{\"1\":{\"0\":1}}],[\"of\",{\"1\":{\"0\":6}}],[\"utilizing\",{\"1\":{\"0\":1}}],[\"using\",{\"1\":{\"0\":2}}],[\"university\",{\"1\":{\"0\":1}}],[\"ltspice\",{\"1\":{\"0\":1}}],[\"lego\",{\"1\":{\"0\":1}}],[\"like\",{\"1\":{\"0\":1}}],[\"1\",{\"0\":{\"4\":1},\"1\":{\"0\":1}}],[\"different\",{\"1\":{\"0\":4}}],[\"did\",{\"1\":{\"0\":1}}],[\"d\",{\"1\":{\"0\":1}}],[\"dancing\",{\"1\":{\"0\":1}}],[\"picoscope\",{\"1\":{\"0\":1}}],[\"python\",{\"0\":{\"11\":1},\"1\":{\"0\":1}}],[\"power\",{\"1\":{\"0\":1}}],[\"pop\",{\"1\":{\"0\":1}}],[\"project\",{\"1\":{\"0\":2}}],[\"projects\",{\"1\":{\"0\":1}}],[\"photographing\",{\"1\":{\"0\":1}}],[\"k\",{\"1\":{\"0\":1}}],[\"notebook\",{\"0\":{\"11\":1}}],[\"novels\",{\"1\":{\"0\":1}}],[\"name\",{\"1\":{\"0\":1}}],[\"reminder\",{\"2\":{\"9\":1}}],[\"really\",{\"1\":{\"0\":1}}],[\"reading\",{\"1\":{\"0\":1}}],[\"ruoyihan\",{\"1\":{\"0\":1}}],[\"typora\",{\"1\":{\"3\":1}}],[\"tips\",{\"1\":{\"3\":1},\"2\":{\"9\":1}}],[\"time\",{\"1\":{\"0\":1}}],[\"tuning\",{\"1\":{\"0\":1}}],[\"turning\",{\"1\":{\"0\":1}}],[\"team\",{\"1\":{\"0\":1}}],[\"term\",{\"1\":{\"0\":1}}],[\"to\",{\"1\":{\"0\":2,\"3\":1}}],[\"three\",{\"1\":{\"0\":1}}],[\"this\",{\"1\":{\"0\":1}}],[\"theory\",{\"1\":{\"0\":1}}],[\"them\",{\"1\":{\"0\":1}}],[\"the\",{\"1\":{\"0\":5}}],[\"travelling\",{\"1\":{\"0\":1}}],[\"self\",{\"2\":{\"1\":1}}],[\"sensors\",{\"1\":{\"0\":1}}],[\"signal\",{\"1\":{\"0\":1}}],[\"speed\",{\"1\":{\"0\":1}}],[\"spare\",{\"1\":{\"0\":1}}],[\"share\",{\"1\":{\"0\":1}}],[\"some\",{\"1\":{\"0\":2,\"3\":1}}],[\"studying\",{\"1\":{\"0\":1}}],[\"student\",{\"1\":{\"0\":1}}],[\"year\",{\"1\":{\"0\":1}}],[\"are\",{\"1\":{\"3\":1}}],[\"articles\",{\"1\":{\"3\":1}}],[\"article\",{\"0\":{\"3\":1,\"10\":1,\"12\":1},\"2\":{\"8\":1}}],[\"author\",{\"2\":{\"2\":1}}],[\"acquired\",{\"1\":{\"0\":1}}],[\"applied\",{\"1\":{\"0\":1}}],[\"and\",{\"1\":{\"0\":5}}],[\"a\",{\"1\":{\"0\":2}}],[\"am\",{\"1\":{\"0\":1}}],[\"about\",{\"0\":{\"0\":1}}],[\"introduction\",{\"2\":{\"1\":1}}],[\"integrated\",{\"1\":{\"0\":1}}],[\"interesting\",{\"1\":{\"0\":1}}],[\"in\",{\"1\":{\"0\":4,\"3\":1}}],[\"i\",{\"1\":{\"0\":4}}],[\"is\",{\"1\":{\"0\":1}}],[\"circuits\",{\"1\":{\"0\":1}}],[\"cindy\",{\"1\":{\"0\":1}}],[\"controlling\",{\"1\":{\"0\":1}}],[\"created\",{\"1\":{\"0\":1}}],[\"cambridge\",{\"1\":{\"0\":1}}],[\"currently\",{\"1\":{\"0\":1}}],[\"microprocessors\",{\"1\":{\"0\":1}}],[\"mindstorm\",{\"1\":{\"0\":1}}],[\"multimeters\",{\"1\":{\"0\":1}}],[\"modulation\",{\"1\":{\"0\":1}}],[\"mating\",{\"1\":{\"0\":1}}],[\"my\",{\"1\":{\"0\":2}}],[\"measuring\",{\"1\":{\"0\":1}}],[\"me\",{\"0\":{\"0\":1}}]],\"serializationVersion\":2},\"/zh/\":{\"documentCount\":43,\"nextId\":43,\"documentIds\":{\"0\":\"v-858cfdd6\",\"1\":\"v-858cfdd6#介绍页\",\"2\":\"v-858cfdd6@0\",\"3\":\"v-858cfdd6@1\",\"4\":\"v-ef446a06\",\"5\":\"v-ef446a06#_1-概念题\",\"6\":\"v-ef446a06#_2-选择题\",\"7\":\"v-ef446a06#_3-填空题\",\"8\":\"v-ef446a06#_4-编程题\",\"9\":\"v-ef446a06#_4-1-定义和输出变量\",\"10\":\"v-ef446a06#_4-2-变量的赋值\",\"11\":\"v-ef446a06#_4-3-变量的覆盖\",\"12\":\"v-ef446a06#_4-4-使用-sep-和-end-参数\",\"13\":\"v-ef446a06#_4-5-同时输出多个变量\",\"14\":\"v-ef446a06#_4-6-多个变量赋予不同值和相同值\",\"15\":\"v-ef446a06@0\",\"16\":\"v-ef446a06@1\",\"17\":\"v-3d681a5c\",\"18\":\"v-3d681a5c#_1-理解变量-生活中的例子\",\"19\":\"v-3d681a5c#_1-1-什么是变量\",\"20\":\"v-3d681a5c#_1-2-一个例子\",\"21\":\"v-3d681a5c#_2-如何创建变量-赋值语句\",\"22\":\"v-3d681a5c#_3-探究print\",\"23\":\"v-3d681a5c#_3-1-同时输出多个数据\",\"24\":\"v-3d681a5c#_3-2-sep修改多个变量同时输出的间隔\",\"25\":\"v-3d681a5c#_3-3-end修改print输出结尾方式\",\"26\":\"v-3d681a5c#_3-4-end-和sep可以同时使用\",\"27\":\"v-3d681a5c#_4-进阶的赋值方法\",\"28\":\"v-3d681a5c#_4-1-多个变量同时赋相同的值\",\"29\":\"v-3d681a5c#_4-2-多个变量同时赋不同的值\",\"30\":\"v-3d681a5c#practice\",\"31\":\"v-3d681a5c#_5-变量的命名规则\",\"32\":\"v-3d681a5c#_6-练习\",\"33\":\"v-3d681a5c@0\",\"34\":\"v-3d681a5c@1\",\"35\":\"v-6930734e\",\"36\":\"v-6930734e#_1-标题编写\",\"37\":\"v-6930734e#标题2\",\"38\":\"v-6930734e#标题3\",\"39\":\"v-6930734e#标题6\",\"40\":\"v-6930734e#_2-图片插入\",\"41\":\"v-6930734e@0\",\"42\":\"v-6930734e@1\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1],\"1\":[1,38],\"2\":[null,null,1],\"3\":[null,null,1],\"4\":[2],\"5\":[2,75],\"6\":[2,68],\"7\":[2,65],\"8\":[2],\"9\":[3,12],\"10\":[3,15],\"11\":[3,18],\"12\":[6,17],\"13\":[3,21],\"14\":[3,18],\"15\":[null,null,2],\"16\":[null,null,3],\"17\":[2],\"18\":[3],\"19\":[2,4],\"20\":[3,43],\"21\":[3,54],\"22\":[2],\"23\":[3,16],\"24\":[3,9],\"25\":[2,12],\"26\":[4,12],\"27\":[2],\"28\":[3,9],\"29\":[3,9],\"30\":[1,23],\"31\":[2,80],\"32\":[2,68],\"33\":[null,null,2],\"34\":[null,null,2],\"35\":[2],\"36\":[2],\"37\":[1],\"38\":[1,1],\"39\":[1],\"40\":[2],\"41\":[null,null,2],\"42\":[null,null,2]},\"averageFieldLength\":[2.2803646218280367,28.256609520919284,0.8630252100840337],\"storedFields\":{\"0\":{\"h\":\"关于我\"},\"1\":{\"h\":\"介绍页\",\"t\":[\"咳咳，虽然想说的话不是很多，但还是简单介绍一下我～～\",\"我是王若伊晗。是这个博客的主人，你也可以叫我蝶梦，这个名字来源于一首诗中的哲学典故----“庄生晓梦迷蝴蝶，望帝春心托杜鹃” 庄周梦见自己便成了蝴蝶，从喧嚣的人生走向逍遥之境，而梦醒发现自己还是庄子。他说当梦足够真实，人没有任何能力知道自己是否是在做梦，那我们呢？我们是否能分清现实和梦境呢？综上，我给自己起了一个富有浪漫主义色彩的笔名——“蝶梦”。\",\"关于我的爱好，我喜欢读小说，跳舞（K-pop）和旅行，并热衷于交很多很多的朋友......\",\"现在的我是剑桥大学工程专业的一名学生，主修电磁学，电路分析，机械学，结构力学，数学，材料学和流体力学。对于未来的就业方向还有点迷茫，还在努力摸索中......\",\"那就先说这么多吧，等想到了再补上！\"]},\"2\":{\"c\":[\"个人简介\"]},\"3\":{\"c\":[\"作者\"]},\"4\":{\"h\":\"01 Practice\"},\"5\":{\"h\":\"1. 概念题\",\"t\":[\"此题属于概念性问题，没有明确的答案标准，请您根据你所学的知识进行回答。\",\"在 Python 中，print 函数是用来做什么的？\",\"输出/打印出代码运行结果\",\"如何在 Python 中声明一个变量？请给出一个例子。\",\"a_b_c1 = \\\"hello world\\\" \",\"如何在 Python 中进行多个变量同时赋值相同的值？请给出一个例子。\",\"a = b = c = 1 \",\"如何在 Python 中进行多个变量同时赋值不同的值？请给出一个例子。\",\"a, b, c = 1, 2, 3 \",\"在 Python 中，如果我们想要在一行中打印多个变量，应该怎么做？请给出一个例子。\",\"a, b, c = 1, 2, 3 print(a, b, c) \",\"什么是 Python 中的注释？怎么写注释？\",\"# 这是一行注释 \",\"在 Python 中，我们如何改变 print 函数中的 sep 参数，以改变多个变量的输出间隔？请给出一个例子。\",\"a = b = c = 1 print (a, b, c, sep = 'hahaha') \",\"在 Python 中 print 的 end 作用是什么？编写个代码示例。\",\"#end 的作用是改变输出时的结尾结束方式 a = b = c = 1 print (a, end = '/n/n') print (b) ''' 1 1 ''' \",\"在 Python 中，如果我们要覆盖一个变量的值，应该怎么做？请给出一个例子。\",\"a = 1 print(a) a = 2 print(a) #1 #2 \",\"在 Python 中，我们怎么样才能让计算机“看不见”一行代码？\",\"可以对当行代码进行注释\",\"当我们用 print 函数同时输出多个变量时，默认的间隔符是什么？\",\"是一个空格——— sep=‘ ’\",\"在 Python 中，一个变量可以存储什么样的数据？请给出至少三个例子。\",\"a = 1 #integer b = 1.45 #float c = \\\"hello\\\"#string \",\"在编写代码中，为什么要适当的加上空格？空格对代码有影响吗？\",\"增加代码的可读性，使代码更加规范\",\"空格对代码没有影响\",\"变量命名为什么推荐：“见名知意”？\",\"方便检查\",\"便于理解\",\"这些问题主要围绕 Python 中的变量声明、赋值、输出，以及注释的使用等基础概念展开，帮助你更好地理解和巩固这些概念。\"]},\"6\":{\"h\":\"2. 选择题\",\"t\":[\"Python 变量的命名规则中，以下哪一项是错误的？\",\"(c)\",\"a) 变量名可以由字母、数字和下划线组成\",\"b) 变量名不能以数字开头\",\"c) 变量名可以以特殊字符，如@或#，开头\",\"d) 变量名可以包含大写和小写字母\",\"在 Python 中，如何使用 print 函数打印字符串 \\\"Hello, World!\\\"？\",\"(b)\",\"a) print \\\"Hello, World!\\\"\",\"b) print(\\\"Hello, World!\\\")\",\"c) echo(\\\"Hello, World!\\\")\",\"d) print[Hello, World!]\",\"print 函数中的 end 参数用于什么？\",\"(b)\",\"a) 确定是否结束程序\",\"b) 在输出的末尾添加指定字符\",\"c) 控制输出的数量\",\"d) 确定输出的顺序\",\"如果我想在 print 函数中，用\\\",\\\"作为分隔符，应该如何操作？\",\"(a)\",\"a) 使用参数 sep = \\\",\\\"\",\"b) 使用参数 end = \\\",\\\"\",\"c) 使用参数 print = \\\",\\\"\",\"d) 使用参数 divide = \\\",\\\"\",\"如果我想在不换行的情况下输出两个变量 a 和 b，以下哪个是正确的？\",\"(b) #a?\",\"a) print(a, b, end = ' ')\",\"b) print(a, b, sep = ' ')\",\"c) print(a; b)\",\"d) print(a, b, end = '\\\\n')\",\"在 Python 中，以下哪种方法可以用来删除变量？\",\"(c)\",\"a) drop(variable)\",\"b) remove(variable)\",\"c) del variable\",\"d) delete variable\",\"在 Python 中，以下哪个语句是错误的？\",\"(c)\",\"a) x, y, z = \\\"Orange\\\", \\\"Banana\\\", \\\"Cherry\\\"\",\"b) x = y = z = \\\"Orange\\\"\",\"c) x = \\\"Orange\\\" = y\",\"d) x, y = y, x\",\"在 Python 中，以下哪个声明不是合法的变量名？\",\"(c)\",\"a) _myvar\",\"b) myVar\",\"c) 9var\",\"d) varName9\",\"下列哪个 print 函数的使用方式是正确的？\",\"(a)\",\"a) print(a, b, c, sep = ' ', end = ' ')\",\"b) print(a b c sep = ' ', end = ' ')\",\"c) print[a, b, c, sep = ' ', end = ' ']\",\"d) print{a, b, c, sep = ' ', end = ' '}\",\"Python 中的哪个函数可以用来获取变量的类型？\",\"(b)\",\"a) typeof(variable)\",\"b) type(variable)\",\"c) getType(variable)\",\"d) variable.type()\"]},\"7\":{\"h\":\"3. 填空题\",\"t\":[\"在 Python 中，___print__ 关键字用于打印一个变量的值。\",\"Python 中的变量可以是字符串、整数、浮点数或布尔类型。例如，my_str = \\\"Hello World\\\" 使 my_str 成为一个 ___变量__。\",\"在 Python 中，我们可以通过 ___print( my_var )_(my_var) 来打印变量 my_var。\",\"在 Python 中，我们可以使用 my_var = __10___ 来创建一个值为 10 的变量 my_var。\",\"如果我们有两个变量 a = 5 和 b = 10，我们可以使用 print(a, ___b__) 来打印这两个变量的值。\",\"在 Python 中，变量名可以包含字母、数字和下划线，但不能以数字开头。例如，1my_var 是一个无效的变量名，但 ___my1_var__ 是有效的。\",\"如果我有一个整数变量 my_int = 50，我可以通过在打印语句中添加 __print( “The value of my integer is ”, my_int )___ 来打印 \\\"The value of my integer is 50\\\"。\",\"在 Python 中，通过使用 __=___ 关键字，我们可以将一个变量的值分配给另一个变量。例如，如果 a = 10 和 b = a，那么 b 的值也会变为10。\",\"在 Python 中，我可以通过编写 my_str = __“Hello, Python!”___ 来创建一个包含字符串 \\\"Hello, Python!\\\" 的变量 my_str。\",\"如果我有一个浮点型变量 my_float = 5.67，我可以使用 print(__my_float___ + \\\" is my floating point number\\\") 来打印 \\\"5.67 is my floating point number\\\"。\"]},\"8\":{\"h\":\"4. 编程题\"},\"9\":{\"h\":\"4.1 定义和输出变量\",\"t\":[\"要求：定义一个变量，名字为 greeting，并将它的值设置为 \\\"Hello, World!\\\"。然后使用 print 函数将此变量的值打印出来。\",\"greeting = 'Hello, World!' print( greeting) \"]},\"10\":{\"h\":\"4.2 变量的赋值\",\"t\":[\"要求：定义一个变量，名字为 number，并将它的值设置为 10。然后定义一个新的变量，名字为 copy_number，并将它的值设置为变量 number 的值。使用 print 函数分别打印这两个变量的值。\",\"number = 10 copy_number = number print(number) print(copy_number) \"]},\"11\":{\"h\":\"4.3 变量的覆盖\",\"t\":[\"要求：定义一个变量，名字为 food，并将它的值设置为 \\\"apple\\\"。然后将变量 food 的值改为 \\\"banana\\\"。使用 print 函数打印变量 food 的值，然后解释为什么打印的结果是 \\\"banana\\\" 而不是 \\\"apple\\\"。\",\"food = \\\"apple\\\" food = \\\"banana\\\" print(food) #变量的覆盖 \"]},\"12\":{\"h\":\"4.4 使用 sep 和 end 参数\",\"t\":[\"要求：定义三个变量 a、 b、c，分别赋值为 1，2，3。使用 print 函数打印这三个变量，使得输出的结果是 1-2-3，并且在输出之后不换行。\",\"a, b, c = 1, 2 , 3 print(a, b, c, sep = \\\"-\\\") \"]},\"13\":{\"h\":\"4.5 同时输出多个变量\",\"t\":[\"要求：定义四个变量 name、age、job、hobby，并分别赋值为你的名字、年龄、职业和爱好。使用一次 print 函数将这四个变量的值同时打印出来，每个值之间用逗号隔开。\",\"name = 'Cindy' age = 17 career = 'Student' hobby = \\\"Dancing\\\" print(name, age, career, hobby, sep = ', ') \"]},\"14\":{\"h\":\"4.6 多个变量赋予不同值和相同值\",\"t\":[\"要求：定义三个变量 x、y、z，并且同时为它们赋予值 10。然后将 x 的值改为 20，y 的值改为30。使用 print 函数分别打印 x、y、z 的值。\",\"x = y = z = 10 x = 20 y = 30 print(x) print(y) print(z) \"]},\"15\":{\"c\":[\"python practice\"]},\"16\":{\"c\":[\"practice\",\"python\",\"variables\"]},\"17\":{\"h\":\"01 Variable\"},\"18\":{\"h\":\"1.理解变量--生活中的例子\"},\"19\":{\"h\":\"1.1 什么是变量\",\"t\":[\"变：变化\",\"量：大小\"]},\"20\":{\"h\":\"1.2 一个例子\",\"t\":[\"假如，你是班级当中的课代表，每个月需要统计班级中每个学生的月考成绩。月考成绩会每个月一张纸，每张纸上都会依次记录每个学生的成绩越到成绩，例如：\",\"李雷 98分\",\"马冬梅 89分\",\"刘奕彤 96分\",\"......\",\"某一天，老师要看刘奕彤 1月、2月、3月的成绩，这个时候作为课代表的你需要怎么办。——总不能直接把每个月的月考成绩单直接给老师，显然是不合适的。 我们应该把刘奕彤 1月、2月、3月的成绩抄写到单独的一张纸上，接着给老师。 那么，我们为什么不一开始直接为每一个学生分配一个信封呢？（也可以是档案袋）信封在一开始是扁的，当我们放东西（数据）进去之后，是不是鼓起来了？——是不是变化了？是不是有大小了呢？显然是的。 那么信封，是不是在我们当前所处的空间当中开辟空间，来存放数据并且说这是信封。\",\"类似的有：冰箱，不也是在我们当前所处的空间中，开辟空间。\",\"---- 变量是在计算机的内存当中开辟空间 ----变量会被覆盖\"]},\"21\":{\"h\":\"2.如何创建变量--赋值语句\",\"t\":[\"通过变量名代表或引用某个值\",\"女娲捏了泥人，泥人没有生命，女娲挥了挥手柳条，赋予给泥人生命。此时，泥人可以代表说是女娲的后人。「变量：泥人，值：女娲」\",\"全国人民代表大会，中的人大代表，是由广大人民群众投票选举出来的。他们的权利不是自己获取的，所以他们可以说：我代表的是广大人民群众的意志。「变量：人大代表，值：人民群众」\",\"初始化赋值语句： 变量名 = 表达式\",\"变量名 ：就是这个空间，我们叫它什么名字\",\"表达式： 类似数学表达\",\"程序的逻辑： 从上到下， 从右到左， 最后赋值。\",\"name1 = 'WRYH' name2 = name1 print(name2) #变量的传递 name1 = \\\"look\\\" name1 = \\\"WRYH\\\" print(name1) #变量的覆盖 \",\"x = 1 # 1 赋值给 x x = x + 10 # x 代表 1， 所以 x + 10 == 1 + 10，得到 11 后，赋值给变量x print(x) # 打印输出 # 井号是为了注释，注解，方便理解代码和后期维护。 \"]},\"22\":{\"h\":\"3.探究print\"},\"23\":{\"h\":\"3.1 同时输出多个数据\",\"t\":[\"a = 1 b = 1 c = 1 print(a, b, c) #output 1 1 1 \",\"从输出的结果可以看出，print 同时输出多个变量，每个值之间默认以空格间隔。 那么，我们可以修改这个默认空格间隔么？——答案显然是可以的。 使用 sep。\"]},\"24\":{\"h\":\"3.2 sep修改多个变量同时输出的间隔\",\"t\":[\"a = 1 b = 1 c = 1 print(a, b, c,sep=\\\".hhhhhh.\\\") \"]},\"25\":{\"h\":\"3.3 end修改print输出结尾方式\",\"t\":[\"a = 1 b = 1 c = 1 print(a) print(b) print(c) #--out-- # 1 # 1 # 1 \",\"a = 1 b = 1 c = 1 print(a, end=\\\"\\\\n\\\\n\\\\n\\\") print(b) print(c) #--output-- # 1 # 1 # 1 \",\"a = 1 b = 1 c = 1 print(a, end=\\\"hello hello\\\") print(b) print(c) \"]},\"26\":{\"h\":\"3.4 end 和sep可以同时使用\",\"t\":[\"a = 1 b = 1 c = 1 print(a, b, c, sep = \\\"~\\\", end = \\\" Hello\\\") #1~1~1 Hello \"]},\"27\":{\"h\":\"4.进阶的赋值方法\"},\"28\":{\"h\":\"4.1 多个变量同时赋相同的值\",\"t\":[\"a = b =c = 1 print (a, b, c,) #多个变量同时赋相同值 \"]},\"29\":{\"h\":\"4.2 多个变量同时赋不同的值\",\"t\":[\"a, b, c = 1, 2, 3 print(a, b, c) \"]},\"30\":{\"h\":\"practice\",\"t\":[\"假如你有两个小孩，哥哥叫：Austin，弟弟叫：Jaden。\",\"Austin 想喝果汁，Jaden 想喝可乐。哥哥和弟弟都有专属的杯子，不喜欢用对方的杯子。\",\"家中仅剩一杯果汁、一杯可乐，你不小心把哥哥的杯子装了可乐，弟弟的杯子装了果汁。\",\"问：如何交换哥哥与弟弟杯中的果汁？\",\"Austin = \\\"Coke\\\" # 该赋值可以理解为倒果汁的过程 Jaden = \\\"juice\\\" # 该赋值可以理解为倒果汁的过程 print(\\\"Austin\\\", Austin) print(\\\"Jaden\\\", Jaden) Austin1 = Jaden Jaden1 = Austin Austin = Austin1 Jaden = Jaden1 print(\\\"Austin\\\", Austin) print(\\\"Jaden\\\", Jaden) \",\"Austin = \\\"Coke\\\" # 该赋值可以理解为倒果汁的过程 Jaden = \\\"juice\\\" # 该赋值可以理解为倒果汁的过程 print(\\\"Austin\\\", Austin) print(\\\"Jaden\\\", Jaden) Austin1 = Austin Austin = Jaden Jaden = Austin1 print(\\\"Austin\\\", Austin) print(\\\"Jaden\\\", Jaden) \",\"Austin = \\\"Coke\\\" # 该赋值可以理解为倒果汁的过程 Jaden = \\\"juice\\\" # 该赋值可以理解为倒果汁的过程 print(\\\"Austin\\\", Austin) print(\\\"Jaden\\\", Jaden) Austin, Jaden = Jaden, Austin print(\\\"Austin\\\", Austin) print(\\\"Jaden\\\", Jaden) \"]},\"31\":{\"h\":\"5.变量的命名规则\",\"t\":[\"大小写，英文，数字和__的组合，且不能用数字开头；\",\"a1b2c3 = 1 #数字不可以开头 \",\"系统关键词不能做变量名使用；\",\"as = 1 #不可以print出来 As = 1 aS = 1 a_s = 1 \",\"获取关键词列表：help(‘keywords’)\",\"Here is a list of the Python keywords. Enter any keyword to get more help. False class from or None continue global pass True def if raise and del import return as elif in try assert else is while async except lambda with await finally nonlocal yield break for not \",\"python中的变量名区别大小写\",\"n = 1 N = 2 print (n) #1 \",\"变量名不能包含空格，但可以用下划线\",\"user_name = \\\"hello\\\" username = \\\"hi\\\" \",\"不要使用python的内置函数名作为名称\",\"print = \\\"123\\\" print(print) #不能print出来 \"]},\"32\":{\"h\":\"6. 练习\",\"t\":[\"在 Python 中，变量名可以以数字开始。\",\" 对\",\" 错\",\"在 Python 中，以下哪个变量名是有效的？\",\" 2myVar\",\" myVar2\",\" my-var\",\" my var\",\"在Python中，变量名区分大小写。\",\" 对\",\" 错\",\"在Python中，my_var 和 myVar 是同一个变量。\",\" 对\",\" 错\",\"变量名可以是 Python 中的关键字。\",\" 对\",\" 错\",\"None 是Python中的特殊类型，表示没有值或空值。\",\" 对\",\" 错\",\"在Python中，以下哪个是有效的变量赋值？\",\" 123abc = \\\"hello\\\"\",\" for = \\\"world\\\"\",\" _hidden = \\\"secret\\\"\",\" import = 123\",\"在Python中，一个变量可以同时被赋予多个值。\",\" 对\",\" 错\",\"在Python中，以下哪个是多变量赋值？\",\" a, b, c = 1, 2, 3\",\" a = 1, b = 2, c = 3\",\" a; b; c = 1; 2; 3\",\" a = 1; b = 2; c = 3;\",\"变量在使用之前必须被赋值。\",\" 对\",\" 错\",\"Python中变量的类型是静态的，一旦赋值就不能改变。\",\" 对\",\" 错\",\"在Python中，以下哪个表示全局变量？\",\" var = \\\"hello\\\"\",\" global var\",\" var(global)\",\" def var():\",\"以下哪个表示删除变量？\",\" delete x\",\" del x\",\" remove x\",\" destroy x\",\"my_variable = \\\"Hello, World!\\\" print(my_variable) # 删除变量 del my_variable # 尝试访问已删除的变量将引发 NameError # print(my_variable) \",\"x = 5 之后 y = x，现在改变 y 的值，x 的值也会改变。\",\" 对\",\" 错\",\"x = [1, 2, 3] 之后 y = x，现在改变 y 的列表内容，x 的内容也会改变。\",\" 对\",\" 错\",\"在Python中，变量只能存储基本数据类型的值，如整数或字符串。\",\" 对\",\" 错\"]},\"33\":{\"c\":[\"python notebook\"]},\"34\":{\"c\":[\"notes\",\"python\"]},\"35\":{\"h\":\"Article editing\"},\"36\":{\"h\":\"1.标题编写\"},\"37\":{\"h\":\"标题2\"},\"38\":{\"h\":\"标题3\",\"t\":[\"……\"]},\"39\":{\"h\":\"标题6\"},\"40\":{\"h\":\"2.图片插入\"},\"41\":{\"c\":[\"article editing\"]},\"42\":{\"c\":[\"reminder\",\"tips\"]}},\"dirtCount\":0,\"index\":[[\"图片插入\",{\"0\":{\"40\":1}}],[\"标题6\",{\"0\":{\"39\":1}}],[\"标题3\",{\"0\":{\"38\":1}}],[\"标题2\",{\"0\":{\"37\":1}}],[\"标题编写\",{\"0\":{\"36\":1}}],[\"现在改变\",{\"1\":{\"32\":2}}],[\"现在的我是剑桥大学工程专业的一名学生\",{\"1\":{\"1\":1}}],[\"之后\",{\"1\":{\"32\":2}}],[\"尝试访问已删除的变量将引发\",{\"1\":{\"32\":1}}],[\"删除变量\",{\"1\":{\"32\":1}}],[\"表示没有值或空值\",{\"1\":{\"32\":1}}],[\"表达式\",{\"1\":{\"21\":2}}],[\"错\",{\"1\":{\"32\":11}}],[\"对\",{\"1\":{\"32\":11}}],[\"对于未来的就业方向还有点迷茫\",{\"1\":{\"1\":1}}],[\"练习\",{\"0\":{\"32\":1}}],[\"username\",{\"1\":{\"31\":1}}],[\"user\",{\"1\":{\"31\":1}}],[\"reminder\",{\"2\":{\"42\":1}}],[\"remove\",{\"1\":{\"6\":1,\"32\":1}}],[\"return\",{\"1\":{\"31\":1}}],[\"raise\",{\"1\":{\"31\":1}}],[\"more\",{\"1\":{\"31\":1}}],[\"my1\",{\"1\":{\"7\":1}}],[\"my\",{\"1\":{\"7\":17,\"32\":7}}],[\"myvar2\",{\"1\":{\"32\":1}}],[\"myvar\",{\"1\":{\"6\":2,\"32\":1}}],[\"lambda\",{\"1\":{\"31\":1}}],[\"list\",{\"1\":{\"31\":1}}],[\"look\",{\"1\":{\"21\":1}}],[\"获取关键词列表\",{\"1\":{\"31\":1}}],[\"系统关键词不能做变量名使用\",{\"1\":{\"31\":1}}],[\"且不能用数字开头\",{\"1\":{\"31\":1}}],[\"英文\",{\"1\":{\"31\":1}}],[\"该赋值可以理解为倒果汁的过程\",{\"1\":{\"30\":6}}],[\"问\",{\"1\":{\"30\":1}}],[\"弟弟的杯子装了果汁\",{\"1\":{\"30\":1}}],[\"弟弟叫\",{\"1\":{\"30\":1}}],[\"家中仅剩一杯果汁\",{\"1\":{\"30\":1}}],[\"不能print出来\",{\"1\":{\"31\":1}}],[\"不要使用python的内置函数名作为名称\",{\"1\":{\"31\":1}}],[\"不可以print出来\",{\"1\":{\"31\":1}}],[\"不喜欢用对方的杯子\",{\"1\":{\"30\":1}}],[\"不也是在我们当前所处的空间中\",{\"1\":{\"20\":1}}],[\"哥哥和弟弟都有专属的杯子\",{\"1\":{\"30\":1}}],[\"哥哥叫\",{\"1\":{\"30\":1}}],[\"想喝可乐\",{\"1\":{\"30\":1}}],[\"想喝果汁\",{\"1\":{\"30\":1}}],[\"juice\",{\"1\":{\"30\":3}}],[\"jaden1\",{\"1\":{\"30\":2}}],[\"jaden\",{\"1\":{\"30\":23}}],[\"job\",{\"1\":{\"13\":1}}],[\"多个变量同时赋不同的值\",{\"0\":{\"29\":1}}],[\"多个变量同时赋相同值\",{\"1\":{\"28\":1}}],[\"多个变量同时赋相同的值\",{\"0\":{\"28\":1}}],[\"多个变量赋予不同值和相同值\",{\"0\":{\"14\":1}}],[\"进阶的赋值方法\",{\"0\":{\"27\":1}}],[\"进去之后\",{\"1\":{\"20\":1}}],[\"~\",{\"1\":{\"26\":1}}],[\"答案显然是可以的\",{\"1\":{\"23\":1}}],[\"同时输出多个数据\",{\"0\":{\"23\":1}}],[\"同时输出多个变量\",{\"0\":{\"13\":1},\"1\":{\"23\":1}}],[\"探究print\",{\"0\":{\"22\":1}}],[\"方便理解代码和后期维护\",{\"1\":{\"21\":1}}],[\"方便检查\",{\"1\":{\"5\":1}}],[\"注解\",{\"1\":{\"21\":1}}],[\"井号是为了注释\",{\"1\":{\"21\":1}}],[\"打印输出\",{\"1\":{\"21\":1}}],[\"打印出代码运行结果\",{\"1\":{\"5\":1}}],[\"后\",{\"1\":{\"21\":1}}],[\"得到\",{\"1\":{\"21\":1}}],[\"所以\",{\"1\":{\"21\":1}}],[\"所以他们可以说\",{\"1\":{\"21\":1}}],[\"代表\",{\"1\":{\"21\":1}}],[\"with\",{\"1\":{\"31\":1}}],[\"while\",{\"1\":{\"31\":1}}],[\"wryh\",{\"1\":{\"21\":2}}],[\"world\",{\"1\":{\"5\":1,\"6\":5,\"7\":1,\"9\":2,\"32\":2}}],[\"最后赋值\",{\"1\":{\"21\":1}}],[\"从输出的结果可以看出\",{\"1\":{\"23\":1}}],[\"从右到左\",{\"1\":{\"21\":1}}],[\"从上到下\",{\"1\":{\"21\":1}}],[\"从喧嚣的人生走向逍遥之境\",{\"1\":{\"1\":1}}],[\"程序的逻辑\",{\"1\":{\"21\":1}}],[\"类似数学表达\",{\"1\":{\"21\":1}}],[\"类似的有\",{\"1\":{\"20\":1}}],[\"就是这个空间\",{\"1\":{\"21\":1}}],[\"初始化赋值语句\",{\"1\":{\"21\":1}}],[\"人民群众\",{\"1\":{\"21\":1}}],[\"人大代表\",{\"1\":{\"21\":1}}],[\"人没有任何能力知道自己是否是在做梦\",{\"1\":{\"1\":1}}],[\"他们的权利不是自己获取的\",{\"1\":{\"21\":1}}],[\"他说当梦足够真实\",{\"1\":{\"1\":1}}],[\"全国人民代表大会\",{\"1\":{\"21\":1}}],[\"值\",{\"1\":{\"21\":2}}],[\"泥人\",{\"1\":{\"21\":1}}],[\"泥人可以代表说是女娲的后人\",{\"1\":{\"21\":1}}],[\"泥人没有生命\",{\"1\":{\"21\":1}}],[\"此时\",{\"1\":{\"21\":1}}],[\"此题属于概念性问题\",{\"1\":{\"5\":1}}],[\"赋予给泥人生命\",{\"1\":{\"21\":1}}],[\"赋值给变量x\",{\"1\":{\"21\":1}}],[\"赋值给\",{\"1\":{\"21\":1}}],[\"赋值语句\",{\"0\":{\"21\":1}}],[\"赋值\",{\"1\":{\"5\":1}}],[\"女娲\",{\"1\":{\"21\":1}}],[\"女娲挥了挥手柳条\",{\"1\":{\"21\":1}}],[\"女娲捏了泥人\",{\"1\":{\"21\":1}}],[\"通过变量名代表或引用某个值\",{\"1\":{\"21\":1}}],[\"通过使用\",{\"1\":{\"7\":1}}],[\"开辟空间\",{\"1\":{\"20\":1}}],[\"开头\",{\"1\":{\"6\":1}}],[\"冰箱\",{\"1\":{\"20\":1}}],[\"显然是的\",{\"1\":{\"20\":1}}],[\"显然是不合适的\",{\"1\":{\"20\":1}}],[\"当我们放东西\",{\"1\":{\"20\":1}}],[\"当我们用\",{\"1\":{\"5\":1}}],[\"信封在一开始是扁的\",{\"1\":{\"20\":1}}],[\"也可以是档案袋\",{\"1\":{\"20\":1}}],[\"接着给老师\",{\"1\":{\"20\":1}}],[\"总不能直接把每个月的月考成绩单直接给老师\",{\"1\":{\"20\":1}}],[\"老师要看刘奕彤\",{\"1\":{\"20\":1}}],[\"某一天\",{\"1\":{\"20\":1}}],[\"刘奕彤\",{\"1\":{\"20\":1}}],[\"89分\",{\"1\":{\"20\":1}}],[\"马冬梅\",{\"1\":{\"20\":1}}],[\"96分\",{\"1\":{\"20\":1}}],[\"98分\",{\"1\":{\"20\":1}}],[\"9var\",{\"1\":{\"6\":1}}],[\"李雷\",{\"1\":{\"20\":1}}],[\"每张纸上都会依次记录每个学生的成绩越到成绩\",{\"1\":{\"20\":1}}],[\"每个值之间默认以空格间隔\",{\"1\":{\"23\":1}}],[\"每个值之间用逗号隔开\",{\"1\":{\"13\":1}}],[\"每个月需要统计班级中每个学生的月考成绩\",{\"1\":{\"20\":1}}],[\"月考成绩会每个月一张纸\",{\"1\":{\"20\":1}}],[\"你不小心把哥哥的杯子装了可乐\",{\"1\":{\"30\":1}}],[\"你是班级当中的课代表\",{\"1\":{\"20\":1}}],[\"你也可以叫我蝶梦\",{\"1\":{\"1\":1}}],[\"假如你有两个小孩\",{\"1\":{\"30\":1}}],[\"假如\",{\"1\":{\"20\":1}}],[\"大小写\",{\"1\":{\"31\":1}}],[\"大小\",{\"1\":{\"19\":1}}],[\"量\",{\"1\":{\"19\":1}}],[\"变化\",{\"1\":{\"19\":1}}],[\"变\",{\"1\":{\"19\":1}}],[\"变量只能存储基本数据类型的值\",{\"1\":{\"32\":1}}],[\"变量在使用之前必须被赋值\",{\"1\":{\"32\":1}}],[\"变量会被覆盖\",{\"1\":{\"20\":1}}],[\"变量是在计算机的内存当中开辟空间\",{\"1\":{\"20\":1}}],[\"变量的命名规则\",{\"0\":{\"31\":1}}],[\"变量的命名规则中\",{\"1\":{\"6\":1}}],[\"变量的传递\",{\"1\":{\"21\":1}}],[\"变量的覆盖\",{\"0\":{\"11\":1},\"1\":{\"11\":1,\"21\":1}}],[\"变量的赋值\",{\"0\":{\"10\":1}}],[\"变量\",{\"1\":{\"7\":1,\"21\":2}}],[\"变量名区分大小写\",{\"1\":{\"32\":1}}],[\"变量名不能包含空格\",{\"1\":{\"31\":1}}],[\"变量名不能以数字开头\",{\"1\":{\"6\":1}}],[\"变量名\",{\"1\":{\"21\":2}}],[\"变量名可以是\",{\"1\":{\"32\":1}}],[\"变量名可以以数字开始\",{\"1\":{\"32\":1}}],[\"变量名可以以特殊字符\",{\"1\":{\"6\":1}}],[\"变量名可以包含字母\",{\"1\":{\"7\":1}}],[\"变量名可以包含大写和小写字母\",{\"1\":{\"6\":1}}],[\"变量名可以由字母\",{\"1\":{\"6\":1}}],[\"变量命名为什么推荐\",{\"1\":{\"5\":1}}],[\"生活中的例子\",{\"0\":{\"18\":1}}],[\"理解变量\",{\"0\":{\"18\":1}}],[\"6\",{\"0\":{\"14\":1,\"32\":1}}],[\"67\",{\"1\":{\"7\":2}}],[\"职业和爱好\",{\"1\":{\"13\":1}}],[\"年龄\",{\"1\":{\"13\":1}}],[\"分别赋值为\",{\"1\":{\"12\":1}}],[\"而不是\",{\"1\":{\"11\":1}}],[\"而梦醒发现自己还是庄子\",{\"1\":{\"1\":1}}],[\"for\",{\"1\":{\"31\":1,\"32\":1}}],[\"food\",{\"1\":{\"11\":6}}],[\"finally\",{\"1\":{\"31\":1}}],[\"from\",{\"1\":{\"31\":1}}],[\"false\",{\"1\":{\"31\":1}}],[\"floating\",{\"1\":{\"7\":2}}],[\"float\",{\"1\":{\"5\":1,\"7\":2}}],[\"然后将\",{\"1\":{\"14\":1}}],[\"然后将变量\",{\"1\":{\"11\":1}}],[\"然后解释为什么打印的结果是\",{\"1\":{\"11\":1}}],[\"然后定义一个新的变量\",{\"1\":{\"10\":1}}],[\"然后使用\",{\"1\":{\"9\":1}}],[\"并且同时为它们赋予值\",{\"1\":{\"14\":1}}],[\"并且在输出之后不换行\",{\"1\":{\"12\":1}}],[\"并分别赋值为你的名字\",{\"1\":{\"13\":1}}],[\"并将它的值设置为变量\",{\"1\":{\"10\":1}}],[\"并将它的值设置为\",{\"1\":{\"9\":1,\"10\":1,\"11\":1}}],[\"并热衷于交很多很多的朋友\",{\"1\":{\"1\":1}}],[\"global\",{\"1\":{\"31\":1,\"32\":2}}],[\"get\",{\"1\":{\"31\":1}}],[\"gettype\",{\"1\":{\"6\":1}}],[\"greeting\",{\"1\":{\"9\":3}}],[\"名字为\",{\"1\":{\"9\":1,\"10\":2,\"11\":1}}],[\"定义四个变量\",{\"1\":{\"13\":1}}],[\"定义三个变量\",{\"1\":{\"12\":1,\"14\":1}}],[\"定义一个变量\",{\"1\":{\"9\":1,\"10\":1,\"11\":1}}],[\"定义和输出变量\",{\"0\":{\"9\":1}}],[\"要求\",{\"1\":{\"9\":1,\"10\":1,\"11\":1,\"12\":1,\"13\":1,\"14\":1}}],[\"编程题\",{\"0\":{\"8\":1}}],[\"编写个代码示例\",{\"1\":{\"5\":1}}],[\"4\",{\"0\":{\"8\":1,\"9\":1,\"10\":1,\"11\":1,\"12\":2,\"13\":1,\"14\":1,\"26\":1,\"27\":1,\"28\":1,\"29\":1}}],[\"45\",{\"1\":{\"5\":1}}],[\"+\",{\"1\":{\"7\":1,\"21\":3}}],[\"in\",{\"1\":{\"31\":1}}],[\"int\",{\"1\":{\"7\":2}}],[\"integer\",{\"1\":{\"5\":1,\"7\":2}}],[\"import\",{\"1\":{\"31\":1,\"32\":1}}],[\"if\",{\"1\":{\"31\":1}}],[\"is\",{\"1\":{\"7\":4,\"31\":2}}],[\"or\",{\"1\":{\"31\":1}}],[\"orange\",{\"1\":{\"6\":3}}],[\"out\",{\"1\":{\"25\":1}}],[\"output\",{\"1\":{\"23\":1,\"25\":1}}],[\"of\",{\"1\":{\"7\":2,\"31\":1}}],[\"value\",{\"1\":{\"7\":2}}],[\"var\",{\"1\":{\"7\":7,\"32\":7}}],[\"varname9\",{\"1\":{\"6\":1}}],[\"variables\",{\"2\":{\"16\":1}}],[\"variable\",{\"0\":{\"17\":1},\"1\":{\"6\":8,\"32\":4}}],[\"tips\",{\"2\":{\"42\":1}}],[\"try\",{\"1\":{\"31\":1}}],[\"true\",{\"1\":{\"31\":1}}],[\"to\",{\"1\":{\"31\":1}}],[\"the\",{\"1\":{\"7\":2,\"31\":1}}],[\"type\",{\"1\":{\"6\":2}}],[\"typeof\",{\"1\":{\"6\":1}}],[\"但可以用下划线\",{\"1\":{\"31\":1}}],[\"但\",{\"1\":{\"7\":1}}],[\"但不能以数字开头\",{\"1\":{\"7\":1}}],[\"但还是简单介绍一下我～～\",{\"1\":{\"1\":1}}],[\"50\",{\"1\":{\"7\":2}}],[\"5\",{\"0\":{\"13\":1,\"31\":1},\"1\":{\"7\":3,\"32\":1}}],[\"来存放数据并且说这是信封\",{\"1\":{\"20\":1}}],[\"来创建一个包含字符串\",{\"1\":{\"7\":1}}],[\"来创建一个值为\",{\"1\":{\"7\":1}}],[\"来打印\",{\"1\":{\"7\":2}}],[\"来打印这两个变量的值\",{\"1\":{\"7\":1}}],[\"来打印变量\",{\"1\":{\"7\":1}}],[\"成为一个\",{\"1\":{\"7\":1}}],[\"例如\",{\"1\":{\"7\":3,\"20\":1}}],[\"浮点数或布尔类型\",{\"1\":{\"7\":1}}],[\"整数\",{\"1\":{\"7\":1}}],[\"关键字\",{\"1\":{\"7\":1}}],[\"关键字用于打印一个变量的值\",{\"1\":{\"7\":1}}],[\"关于我的爱好\",{\"1\":{\"1\":1}}],[\"关于我\",{\"0\":{\"0\":1}}],[\"填空题\",{\"0\":{\"7\":1}}],[\"下列哪个\",{\"1\":{\"6\":1}}],[\"z\",{\"1\":{\"6\":2,\"14\":4}}],[\"yield\",{\"1\":{\"31\":1}}],[\"y\",{\"1\":{\"6\":5,\"14\":6,\"32\":4}}],[\"x\",{\"1\":{\"6\":5,\"14\":6,\"21\":7,\"32\":10}}],[\"和sep可以同时使用\",{\"0\":{\"26\":1}}],[\"和\",{\"0\":{\"12\":1},\"1\":{\"6\":1,\"7\":2,\"32\":1}}],[\"和旅行\",{\"1\":{\"1\":1}}],[\"使得输出的结果是\",{\"1\":{\"12\":1}}],[\"使用一次\",{\"1\":{\"13\":1}}],[\"使用\",{\"0\":{\"12\":1},\"1\":{\"10\":1,\"11\":1,\"12\":1,\"14\":1,\"23\":1}}],[\"使用参数\",{\"1\":{\"6\":4}}],[\"使\",{\"1\":{\"7\":1}}],[\"使代码更加规范\",{\"1\":{\"5\":1}}],[\"应该如何操作\",{\"1\":{\"6\":1}}],[\"应该怎么做\",{\"1\":{\"5\":2}}],[\"用\",{\"1\":{\"6\":1}}],[\"确定输出的顺序\",{\"1\":{\"6\":1}}],[\"确定是否结束程序\",{\"1\":{\"6\":1}}],[\"控制输出的数量\",{\"1\":{\"6\":1}}],[\"editing\",{\"0\":{\"35\":1},\"2\":{\"41\":1}}],[\"except\",{\"1\":{\"31\":1}}],[\"else\",{\"1\":{\"31\":1}}],[\"elif\",{\"1\":{\"31\":1}}],[\"enter\",{\"1\":{\"31\":1}}],[\"end=\",{\"1\":{\"25\":2}}],[\"end修改print输出结尾方式\",{\"0\":{\"25\":1}}],[\"end\",{\"0\":{\"12\":1,\"26\":1},\"1\":{\"5\":3,\"6\":8,\"26\":1}}],[\"echo\",{\"1\":{\"6\":1}}],[\"destroy\",{\"1\":{\"32\":1}}],[\"def\",{\"1\":{\"31\":1,\"32\":1}}],[\"delete\",{\"1\":{\"6\":1,\"32\":1}}],[\"del\",{\"1\":{\"6\":1,\"31\":1,\"32\":2}}],[\"dancing\",{\"1\":{\"13\":1}}],[\"drop\",{\"1\":{\"6\":1}}],[\"divide\",{\"1\":{\"6\":1}}],[\"d\",{\"1\":{\"6\":10}}],[\"或\",{\"1\":{\"6\":1}}],[\"数字不可以开头\",{\"1\":{\"31\":1}}],[\"数字和\",{\"1\":{\"31\":1}}],[\"数字和下划线\",{\"1\":{\"7\":1}}],[\"数字和下划线组成\",{\"1\":{\"6\":1}}],[\"数据\",{\"1\":{\"20\":1}}],[\"数学\",{\"1\":{\"1\":1}}],[\"选择题\",{\"0\":{\"6\":1}}],[\"帮助你更好地理解和巩固这些概念\",{\"1\":{\"5\":1}}],[\"以下哪个表示删除变量\",{\"1\":{\"32\":1}}],[\"以下哪个表示全局变量\",{\"1\":{\"32\":1}}],[\"以下哪个是多变量赋值\",{\"1\":{\"32\":1}}],[\"以下哪个是有效的变量赋值\",{\"1\":{\"32\":1}}],[\"以下哪个是正确的\",{\"1\":{\"6\":1}}],[\"以下哪个变量名是有效的\",{\"1\":{\"32\":1}}],[\"以下哪个声明不是合法的变量名\",{\"1\":{\"6\":1}}],[\"以下哪个语句是错误的\",{\"1\":{\"6\":1}}],[\"以下哪种方法可以用来删除变量\",{\"1\":{\"6\":1}}],[\"以下哪一项是错误的\",{\"1\":{\"6\":1}}],[\"以及注释的使用等基础概念展开\",{\"1\":{\"5\":1}}],[\"以改变多个变量的输出间隔\",{\"1\":{\"5\":1}}],[\"便于理解\",{\"1\":{\"5\":1}}],[\"见名知意\",{\"1\":{\"5\":1}}],[\"空格对代码没有影响\",{\"1\":{\"5\":1}}],[\"空格对代码有影响吗\",{\"1\":{\"5\":1}}],[\"增加代码的可读性\",{\"1\":{\"5\":1}}],[\"为什么要适当的加上空格\",{\"1\":{\"5\":1}}],[\"secret\",{\"1\":{\"32\":1}}],[\"sep修改多个变量同时输出的间隔\",{\"0\":{\"24\":1}}],[\"sep=\",{\"1\":{\"5\":1,\"24\":1}}],[\"sep\",{\"0\":{\"12\":1},\"1\":{\"5\":2,\"6\":6,\"12\":1,\"13\":1,\"23\":1,\"26\":1}}],[\"s\",{\"1\":{\"31\":1}}],[\"student\",{\"1\":{\"13\":1}}],[\"str\",{\"1\":{\"7\":4}}],[\"string\",{\"1\":{\"5\":1}}],[\"一旦赋值就不能改变\",{\"1\":{\"32\":1}}],[\"一杯可乐\",{\"1\":{\"30\":1}}],[\"一个变量可以同时被赋予多个值\",{\"1\":{\"32\":1}}],[\"一个变量可以存储什么样的数据\",{\"1\":{\"5\":1}}],[\"一个例子\",{\"0\":{\"20\":1}}],[\"一行代码\",{\"1\":{\"5\":1}}],[\"是python中的特殊类型\",{\"1\":{\"32\":1}}],[\"是同一个变量\",{\"1\":{\"32\":1}}],[\"是由广大人民群众投票选举出来的\",{\"1\":{\"21\":1}}],[\"是不是在我们当前所处的空间当中开辟空间\",{\"1\":{\"20\":1}}],[\"是不是有大小了呢\",{\"1\":{\"20\":1}}],[\"是不是变化了\",{\"1\":{\"20\":1}}],[\"是不是鼓起来了\",{\"1\":{\"20\":1}}],[\"是有效的\",{\"1\":{\"7\":1}}],[\"是一个无效的变量名\",{\"1\":{\"7\":1}}],[\"是一个空格\",{\"1\":{\"5\":1}}],[\"是这个博客的主人\",{\"1\":{\"1\":1}}],[\"默认的间隔符是什么\",{\"1\":{\"5\":1}}],[\"可以对当行代码进行注释\",{\"1\":{\"5\":1}}],[\"看不见\",{\"1\":{\"5\":1}}],[\"notes\",{\"2\":{\"34\":1}}],[\"notebook\",{\"2\":{\"33\":1}}],[\"not\",{\"1\":{\"31\":1}}],[\"nonlocal\",{\"1\":{\"31\":1}}],[\"none\",{\"1\":{\"31\":1,\"32\":1}}],[\"nameerror\",{\"1\":{\"32\":1}}],[\"name2\",{\"1\":{\"21\":2}}],[\"name1\",{\"1\":{\"21\":5}}],[\"name\",{\"1\":{\"13\":3,\"31\":1}}],[\"number\",{\"1\":{\"7\":2,\"10\":8}}],[\"n\",{\"1\":{\"5\":2,\"6\":1,\"25\":3,\"31\":3}}],[\"作为分隔符\",{\"1\":{\"6\":1}}],[\"作用是什么\",{\"1\":{\"5\":1}}],[\"作者\",{\"2\":{\"3\":1}}],[\"的内容也会改变\",{\"1\":{\"32\":1}}],[\"的列表内容\",{\"1\":{\"32\":1}}],[\"的组合\",{\"1\":{\"31\":1}}],[\"的值也会改变\",{\"1\":{\"32\":1}}],[\"的值也会变为10\",{\"1\":{\"7\":1}}],[\"的值改为30\",{\"1\":{\"14\":1}}],[\"的值改为\",{\"1\":{\"11\":1,\"14\":1}}],[\"的值\",{\"1\":{\"10\":1,\"11\":1,\"14\":1,\"32\":1}}],[\"的变量\",{\"1\":{\"7\":2}}],[\"的作用是改变输出时的结尾结束方式\",{\"1\":{\"5\":1}}],[\"的\",{\"1\":{\"5\":1}}],[\"hidden\",{\"1\":{\"32\":1}}],[\"hi\",{\"1\":{\"31\":1}}],[\"here\",{\"1\":{\"31\":1}}],[\"help\",{\"1\":{\"31\":2}}],[\"hello\",{\"1\":{\"5\":2,\"6\":5,\"7\":3,\"9\":2,\"25\":2,\"26\":2,\"31\":1,\"32\":3}}],[\"hhhhhh\",{\"1\":{\"24\":1}}],[\"hobby\",{\"1\":{\"13\":3}}],[\"hahaha\",{\"1\":{\"5\":1}}],[\"参数用于什么\",{\"1\":{\"6\":1}}],[\"参数\",{\"0\":{\"12\":1},\"1\":{\"5\":1}}],[\"函数分别打印\",{\"1\":{\"14\":1}}],[\"函数分别打印这两个变量的值\",{\"1\":{\"10\":1}}],[\"函数将这四个变量的值同时打印出来\",{\"1\":{\"13\":1}}],[\"函数将此变量的值打印出来\",{\"1\":{\"9\":1}}],[\"函数打印这三个变量\",{\"1\":{\"12\":1}}],[\"函数打印变量\",{\"1\":{\"11\":1}}],[\"函数打印字符串\",{\"1\":{\"6\":1}}],[\"函数的使用方式是正确的\",{\"1\":{\"6\":1}}],[\"函数中\",{\"1\":{\"6\":1}}],[\"函数中的\",{\"1\":{\"5\":1,\"6\":1}}],[\"函数同时输出多个变量时\",{\"1\":{\"5\":1}}],[\"函数是用来做什么的\",{\"1\":{\"5\":1}}],[\"这个时候作为课代表的你需要怎么办\",{\"1\":{\"20\":1}}],[\"这个名字来源于一首诗中的哲学典故\",{\"1\":{\"1\":1}}],[\"这些问题主要围绕\",{\"1\":{\"5\":1}}],[\"这是一行注释\",{\"1\":{\"5\":1}}],[\"怎么写注释\",{\"1\":{\"5\":1}}],[\"什么是变量\",{\"0\":{\"19\":1}}],[\"什么是\",{\"1\":{\"5\":1}}],[\"如整数或字符串\",{\"1\":{\"32\":1}}],[\"如果\",{\"1\":{\"7\":1}}],[\"如果我有一个浮点型变量\",{\"1\":{\"7\":1}}],[\"如果我有一个整数变量\",{\"1\":{\"7\":1}}],[\"如果我想在不换行的情况下输出两个变量\",{\"1\":{\"6\":1}}],[\"如果我想在\",{\"1\":{\"6\":1}}],[\"如果我们有两个变量\",{\"1\":{\"7\":1}}],[\"如果我们要覆盖一个变量的值\",{\"1\":{\"5\":1}}],[\"如果我们想要在一行中打印多个变量\",{\"1\":{\"5\":1}}],[\"如何交换哥哥与弟弟杯中的果汁\",{\"1\":{\"30\":1}}],[\"如何创建变量\",{\"0\":{\"21\":1}}],[\"如何使用\",{\"1\":{\"6\":1}}],[\"如何在\",{\"1\":{\"5\":3}}],[\"如\",{\"1\":{\"6\":1}}],[\"3月的成绩抄写到单独的一张纸上\",{\"1\":{\"20\":1}}],[\"3月的成绩\",{\"1\":{\"20\":1}}],[\"30\",{\"1\":{\"14\":1}}],[\"3\",{\"0\":{\"7\":1,\"11\":1,\"22\":1,\"23\":1,\"24\":1,\"25\":2,\"26\":1},\"1\":{\"5\":2,\"12\":3,\"29\":1,\"32\":5}}],[\"2myvar\",{\"1\":{\"32\":1}}],[\"2月\",{\"1\":{\"20\":2}}],[\"20\",{\"1\":{\"14\":2}}],[\"2\",{\"0\":{\"6\":1,\"10\":1,\"20\":1,\"21\":1,\"24\":1,\"29\":1,\"40\":1},\"1\":{\"5\":4,\"12\":3,\"29\":1,\"31\":1,\"32\":5}}],[\"class\",{\"1\":{\"31\":1}}],[\"continue\",{\"1\":{\"31\":1}}],[\"coke\",{\"1\":{\"30\":3}}],[\"copy\",{\"1\":{\"10\":3}}],[\"career\",{\"1\":{\"13\":2}}],[\"cindy\",{\"1\":{\"13\":1}}],[\"cherry\",{\"1\":{\"6\":1}}],[\"c\",{\"1\":{\"5\":8,\"6\":18,\"12\":3,\"23\":2,\"24\":2,\"25\":6,\"26\":2,\"28\":1,\"29\":2,\"32\":4}}],[\"c1\",{\"1\":{\"5\":1}}],[\"=c\",{\"1\":{\"28\":1}}],[\"==\",{\"1\":{\"21\":1}}],[\"=\",{\"1\":{\"5\":19,\"6\":22,\"7\":10,\"9\":1,\"10\":2,\"11\":2,\"12\":2,\"13\":5,\"14\":5,\"21\":7,\"23\":3,\"24\":3,\"25\":9,\"26\":5,\"28\":2,\"29\":1,\"30\":14,\"31\":10,\"32\":18}}],[\"break\",{\"1\":{\"31\":1}}],[\"banana\",{\"1\":{\"6\":1,\"11\":3}}],[\"b\",{\"1\":{\"5\":10,\"6\":23,\"7\":4,\"12\":3,\"23\":2,\"24\":2,\"25\":6,\"26\":2,\"28\":2,\"29\":2,\"32\":4}}],[\"article\",{\"0\":{\"35\":1},\"2\":{\"41\":1}}],[\"await\",{\"1\":{\"31\":1}}],[\"and\",{\"1\":{\"31\":1}}],[\"any\",{\"1\":{\"31\":1}}],[\"async\",{\"1\":{\"31\":1}}],[\"assert\",{\"1\":{\"31\":1}}],[\"as\",{\"1\":{\"31\":4}}],[\"a1b2c3\",{\"1\":{\"31\":1}}],[\"austin1\",{\"1\":{\"30\":4}}],[\"austin\",{\"1\":{\"30\":23}}],[\"age\",{\"1\":{\"13\":3}}],[\"apple\",{\"1\":{\"11\":3}}],[\"a\",{\"1\":{\"5\":14,\"6\":22,\"7\":4,\"12\":3,\"23\":2,\"24\":2,\"25\":6,\"26\":2,\"28\":2,\"29\":2,\"31\":2,\"32\":4}}],[\"请给出至少三个例子\",{\"1\":{\"5\":1}}],[\"请给出一个例子\",{\"1\":{\"5\":6}}],[\"请您根据你所学的知识进行回答\",{\"1\":{\"5\":1}}],[\"输出\",{\"1\":{\"5\":2}}],[\"中的关键字\",{\"1\":{\"32\":1}}],[\"中的人大代表\",{\"1\":{\"21\":1}}],[\"中的变量可以是字符串\",{\"1\":{\"7\":1}}],[\"中的变量声明\",{\"1\":{\"5\":1}}],[\"中的哪个函数可以用来获取变量的类型\",{\"1\":{\"6\":1}}],[\"中的注释\",{\"1\":{\"5\":1}}],[\"中进行多个变量同时赋值不同的值\",{\"1\":{\"5\":1}}],[\"中进行多个变量同时赋值相同的值\",{\"1\":{\"5\":1}}],[\"中声明一个变量\",{\"1\":{\"5\":1}}],[\"中\",{\"1\":{\"5\":7,\"6\":4,\"7\":6,\"32\":2}}],[\"在python中\",{\"1\":{\"32\":7}}],[\"在输出的末尾添加指定字符\",{\"1\":{\"6\":1}}],[\"在编写代码中\",{\"1\":{\"5\":1}}],[\"在\",{\"1\":{\"5\":7,\"6\":4,\"7\":6,\"32\":2}}],[\"没有明确的答案标准\",{\"1\":{\"5\":1}}],[\"概念题\",{\"0\":{\"5\":1}}],[\"123abc\",{\"1\":{\"32\":1}}],[\"123\",{\"1\":{\"31\":1,\"32\":1}}],[\"1~1~1\",{\"1\":{\"26\":1}}],[\"11\",{\"1\":{\"21\":1}}],[\"1月\",{\"1\":{\"20\":2}}],[\"17\",{\"1\":{\"13\":1}}],[\"1my\",{\"1\":{\"7\":1}}],[\"10\",{\"1\":{\"7\":4,\"10\":2,\"14\":2,\"21\":3}}],[\"1\",{\"0\":{\"5\":1,\"9\":1,\"18\":1,\"19\":2,\"20\":1,\"23\":1,\"28\":1,\"36\":1},\"1\":{\"5\":11,\"12\":3,\"21\":4,\"23\":6,\"24\":3,\"25\":15,\"26\":3,\"28\":1,\"29\":1,\"31\":7,\"32\":5}}],[\"pass\",{\"1\":{\"31\":1}}],[\"point\",{\"1\":{\"7\":2}}],[\"pop\",{\"1\":{\"1\":1}}],[\"print\",{\"1\":{\"5\":10,\"6\":16,\"7\":5,\"9\":2,\"10\":3,\"11\":2,\"12\":2,\"13\":2,\"14\":4,\"21\":3,\"23\":2,\"24\":1,\"25\":9,\"26\":1,\"28\":1,\"29\":1,\"30\":12,\"31\":4,\"32\":2}}],[\"practice\",{\"0\":{\"4\":1,\"30\":1},\"2\":{\"15\":1,\"16\":1}}],[\"python中变量的类型是静态的\",{\"1\":{\"32\":1}}],[\"python中的变量名区别大小写\",{\"1\":{\"31\":1}}],[\"python\",{\"1\":{\"5\":12,\"6\":6,\"7\":9,\"31\":1,\"32\":3},\"2\":{\"15\":1,\"16\":1,\"33\":1,\"34\":1}}],[\"01\",{\"0\":{\"4\":1,\"17\":1}}],[\"个人简介\",{\"2\":{\"2\":1}}],[\"等想到了再补上\",{\"1\":{\"1\":1}}],[\"那么信封\",{\"1\":{\"20\":1}}],[\"那么\",{\"1\":{\"7\":1,\"20\":1,\"23\":1}}],[\"那就先说这么多吧\",{\"1\":{\"1\":1}}],[\"那我们呢\",{\"1\":{\"1\":1}}],[\"还在努力摸索中\",{\"1\":{\"1\":1}}],[\"材料学和流体力学\",{\"1\":{\"1\":1}}],[\"结构力学\",{\"1\":{\"1\":1}}],[\"机械学\",{\"1\":{\"1\":1}}],[\"电路分析\",{\"1\":{\"1\":1}}],[\"主修电磁学\",{\"1\":{\"1\":1}}],[\"keyword\",{\"1\":{\"31\":1}}],[\"keywords\",{\"1\":{\"31\":2}}],[\"k\",{\"1\":{\"1\":1}}],[\"跳舞\",{\"1\":{\"1\":1}}],[\"蝶梦\",{\"1\":{\"1\":1}}],[\"综上\",{\"1\":{\"1\":1}}],[\"我代表的是广大人民群众的意志\",{\"1\":{\"21\":1}}],[\"我可以使用\",{\"1\":{\"7\":1}}],[\"我可以通过编写\",{\"1\":{\"7\":1}}],[\"我可以通过在打印语句中添加\",{\"1\":{\"7\":1}}],[\"我们叫它什么名字\",{\"1\":{\"21\":1}}],[\"我们为什么不一开始直接为每一个学生分配一个信封呢\",{\"1\":{\"20\":1}}],[\"我们应该把刘奕彤\",{\"1\":{\"20\":1}}],[\"我们可以修改这个默认空格间隔么\",{\"1\":{\"23\":1}}],[\"我们可以将一个变量的值分配给另一个变量\",{\"1\":{\"7\":1}}],[\"我们可以使用\",{\"1\":{\"7\":2}}],[\"我们可以通过\",{\"1\":{\"7\":1}}],[\"我们怎么样才能让计算机\",{\"1\":{\"5\":1}}],[\"我们如何改变\",{\"1\":{\"5\":1}}],[\"我们是否能分清现实和梦境呢\",{\"1\":{\"1\":1}}],[\"我喜欢读小说\",{\"1\":{\"1\":1}}],[\"我给自己起了一个富有浪漫主义色彩的笔名\",{\"1\":{\"1\":1}}],[\"我是王若伊晗\",{\"1\":{\"1\":1}}],[\"庄周梦见自己便成了蝴蝶\",{\"1\":{\"1\":1}}],[\"庄生晓梦迷蝴蝶\",{\"1\":{\"1\":1}}],[\"望帝春心托杜鹃\",{\"1\":{\"1\":1}}],[\"虽然想说的话不是很多\",{\"1\":{\"1\":1}}],[\"咳咳\",{\"1\":{\"1\":1}}],[\"介绍页\",{\"0\":{\"1\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n}})=>{e==="suggest"?self.postMessage(st(t,v[s],n)):e==="search"?self.postMessage(et(t,v[s],n)):self.postMessage({suggestions:st(t,v[s],n),results:et(t,v[s],n)})};
//# sourceMappingURL=index.js.map
